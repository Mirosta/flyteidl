// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: flyteidl/admin/launch_plan_attributes.proto

package admin

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"strings"
	"time"
	"unicode/utf8"

	"github.com/golang/protobuf/ptypes"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = ptypes.DynamicAny{}
)

// define the regex for a UUID once up-front
var _launch_plan_attributes_uuidPattern = regexp.MustCompile("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$")

// Validate checks the field values on LaunchPlanAttributes with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *LaunchPlanAttributes) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Project

	// no validation rules for Domain

	// no validation rules for Workflow

	// no validation rules for LaunchPlan

	if v, ok := interface{}(m.GetMatchingAttributes()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return LaunchPlanAttributesValidationError{
				field:  "MatchingAttributes",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// LaunchPlanAttributesValidationError is the validation error returned by
// LaunchPlanAttributes.Validate if the designated constraints aren't met.
type LaunchPlanAttributesValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LaunchPlanAttributesValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LaunchPlanAttributesValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LaunchPlanAttributesValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LaunchPlanAttributesValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LaunchPlanAttributesValidationError) ErrorName() string {
	return "LaunchPlanAttributesValidationError"
}

// Error satisfies the builtin error interface
func (e LaunchPlanAttributesValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLaunchPlanAttributes.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LaunchPlanAttributesValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LaunchPlanAttributesValidationError{}

// Validate checks the field values on LaunchPlanAttributesUpdateRequest with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *LaunchPlanAttributesUpdateRequest) Validate() error {
	if m == nil {
		return nil
	}

	if v, ok := interface{}(m.GetAttributes()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return LaunchPlanAttributesUpdateRequestValidationError{
				field:  "Attributes",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// LaunchPlanAttributesUpdateRequestValidationError is the validation error
// returned by LaunchPlanAttributesUpdateRequest.Validate if the designated
// constraints aren't met.
type LaunchPlanAttributesUpdateRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LaunchPlanAttributesUpdateRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LaunchPlanAttributesUpdateRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LaunchPlanAttributesUpdateRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LaunchPlanAttributesUpdateRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LaunchPlanAttributesUpdateRequestValidationError) ErrorName() string {
	return "LaunchPlanAttributesUpdateRequestValidationError"
}

// Error satisfies the builtin error interface
func (e LaunchPlanAttributesUpdateRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLaunchPlanAttributesUpdateRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LaunchPlanAttributesUpdateRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LaunchPlanAttributesUpdateRequestValidationError{}

// Validate checks the field values on LaunchPlanAttributesUpdateResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *LaunchPlanAttributesUpdateResponse) Validate() error {
	if m == nil {
		return nil
	}

	return nil
}

// LaunchPlanAttributesUpdateResponseValidationError is the validation error
// returned by LaunchPlanAttributesUpdateResponse.Validate if the designated
// constraints aren't met.
type LaunchPlanAttributesUpdateResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LaunchPlanAttributesUpdateResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LaunchPlanAttributesUpdateResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LaunchPlanAttributesUpdateResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LaunchPlanAttributesUpdateResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LaunchPlanAttributesUpdateResponseValidationError) ErrorName() string {
	return "LaunchPlanAttributesUpdateResponseValidationError"
}

// Error satisfies the builtin error interface
func (e LaunchPlanAttributesUpdateResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLaunchPlanAttributesUpdateResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LaunchPlanAttributesUpdateResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LaunchPlanAttributesUpdateResponseValidationError{}

// Validate checks the field values on LaunchPlanAttributesGetRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *LaunchPlanAttributesGetRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Project

	// no validation rules for Domain

	// no validation rules for Workflow

	// no validation rules for LaunchPlan

	// no validation rules for ResourceType

	return nil
}

// LaunchPlanAttributesGetRequestValidationError is the validation error
// returned by LaunchPlanAttributesGetRequest.Validate if the designated
// constraints aren't met.
type LaunchPlanAttributesGetRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LaunchPlanAttributesGetRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LaunchPlanAttributesGetRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LaunchPlanAttributesGetRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LaunchPlanAttributesGetRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LaunchPlanAttributesGetRequestValidationError) ErrorName() string {
	return "LaunchPlanAttributesGetRequestValidationError"
}

// Error satisfies the builtin error interface
func (e LaunchPlanAttributesGetRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLaunchPlanAttributesGetRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LaunchPlanAttributesGetRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LaunchPlanAttributesGetRequestValidationError{}

// Validate checks the field values on LaunchPlanAttributesGetResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *LaunchPlanAttributesGetResponse) Validate() error {
	if m == nil {
		return nil
	}

	if v, ok := interface{}(m.GetAttributes()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return LaunchPlanAttributesGetResponseValidationError{
				field:  "Attributes",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// LaunchPlanAttributesGetResponseValidationError is the validation error
// returned by LaunchPlanAttributesGetResponse.Validate if the designated
// constraints aren't met.
type LaunchPlanAttributesGetResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LaunchPlanAttributesGetResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LaunchPlanAttributesGetResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LaunchPlanAttributesGetResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LaunchPlanAttributesGetResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LaunchPlanAttributesGetResponseValidationError) ErrorName() string {
	return "LaunchPlanAttributesGetResponseValidationError"
}

// Error satisfies the builtin error interface
func (e LaunchPlanAttributesGetResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLaunchPlanAttributesGetResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LaunchPlanAttributesGetResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LaunchPlanAttributesGetResponseValidationError{}

// Validate checks the field values on LaunchPlanAttributesDeleteRequest with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *LaunchPlanAttributesDeleteRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Project

	// no validation rules for Domain

	// no validation rules for Workflow

	// no validation rules for LaunchPlan

	// no validation rules for ResourceType

	return nil
}

// LaunchPlanAttributesDeleteRequestValidationError is the validation error
// returned by LaunchPlanAttributesDeleteRequest.Validate if the designated
// constraints aren't met.
type LaunchPlanAttributesDeleteRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LaunchPlanAttributesDeleteRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LaunchPlanAttributesDeleteRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LaunchPlanAttributesDeleteRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LaunchPlanAttributesDeleteRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LaunchPlanAttributesDeleteRequestValidationError) ErrorName() string {
	return "LaunchPlanAttributesDeleteRequestValidationError"
}

// Error satisfies the builtin error interface
func (e LaunchPlanAttributesDeleteRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLaunchPlanAttributesDeleteRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LaunchPlanAttributesDeleteRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LaunchPlanAttributesDeleteRequestValidationError{}

// Validate checks the field values on LaunchPlanAttributesDeleteResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *LaunchPlanAttributesDeleteResponse) Validate() error {
	if m == nil {
		return nil
	}

	return nil
}

// LaunchPlanAttributesDeleteResponseValidationError is the validation error
// returned by LaunchPlanAttributesDeleteResponse.Validate if the designated
// constraints aren't met.
type LaunchPlanAttributesDeleteResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LaunchPlanAttributesDeleteResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LaunchPlanAttributesDeleteResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LaunchPlanAttributesDeleteResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LaunchPlanAttributesDeleteResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LaunchPlanAttributesDeleteResponseValidationError) ErrorName() string {
	return "LaunchPlanAttributesDeleteResponseValidationError"
}

// Error satisfies the builtin error interface
func (e LaunchPlanAttributesDeleteResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLaunchPlanAttributesDeleteResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LaunchPlanAttributesDeleteResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LaunchPlanAttributesDeleteResponseValidationError{}
