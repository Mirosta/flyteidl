// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/interface.proto

#include "flyteidl/core/interface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2finterface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ParameterMapEntry_flyteidl_2fcore_2finterface_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2finterface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VariableMapEntry_flyteidl_2fcore_2finterface_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2finterface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VariableMap_flyteidl_2fcore_2finterface_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2finterface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Variable_flyteidl_2fcore_2finterface_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2finterface_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Parameter_flyteidl_2fcore_2finterface_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fliterals_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Literal_flyteidl_2fcore_2fliterals_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2ftypes_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_LiteralType_flyteidl_2fcore_2ftypes_2eproto;
namespace flyteidl {
namespace core {
class VariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Variable> _instance;
} _Variable_default_instance_;
class VariableMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VariableMap> _instance;
} _VariableMap_default_instance_;
class VariableMapEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VariableMapEntry> _instance;
} _VariableMapEntry_default_instance_;
class TypedInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TypedInterface> _instance;
} _TypedInterface_default_instance_;
class ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Parameter> _instance;
  const ::flyteidl::core::Literal* default__;
  bool required_;
} _Parameter_default_instance_;
class ParameterMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterMap> _instance;
} _ParameterMap_default_instance_;
class ParameterMapEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterMapEntry> _instance;
} _ParameterMapEntry_default_instance_;
}  // namespace core
}  // namespace flyteidl
static void InitDefaultsVariable_flyteidl_2fcore_2finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_Variable_default_instance_;
    new (ptr) ::flyteidl::core::Variable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Variable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Variable_flyteidl_2fcore_2finterface_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVariable_flyteidl_2fcore_2finterface_2eproto}, {
      &scc_info_LiteralType_flyteidl_2fcore_2ftypes_2eproto.base,}};

static void InitDefaultsVariableMap_flyteidl_2fcore_2finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_VariableMap_default_instance_;
    new (ptr) ::flyteidl::core::VariableMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::VariableMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VariableMap_flyteidl_2fcore_2finterface_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVariableMap_flyteidl_2fcore_2finterface_2eproto}, {
      &scc_info_VariableMapEntry_flyteidl_2fcore_2finterface_2eproto.base,}};

static void InitDefaultsVariableMapEntry_flyteidl_2fcore_2finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_VariableMapEntry_default_instance_;
    new (ptr) ::flyteidl::core::VariableMapEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::VariableMapEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VariableMapEntry_flyteidl_2fcore_2finterface_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVariableMapEntry_flyteidl_2fcore_2finterface_2eproto}, {
      &scc_info_Variable_flyteidl_2fcore_2finterface_2eproto.base,}};

static void InitDefaultsTypedInterface_flyteidl_2fcore_2finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_TypedInterface_default_instance_;
    new (ptr) ::flyteidl::core::TypedInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::TypedInterface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TypedInterface_flyteidl_2fcore_2finterface_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTypedInterface_flyteidl_2fcore_2finterface_2eproto}, {
      &scc_info_VariableMap_flyteidl_2fcore_2finterface_2eproto.base,}};

static void InitDefaultsParameter_flyteidl_2fcore_2finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_Parameter_default_instance_;
    new (ptr) ::flyteidl::core::Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Parameter_flyteidl_2fcore_2finterface_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsParameter_flyteidl_2fcore_2finterface_2eproto}, {
      &scc_info_Variable_flyteidl_2fcore_2finterface_2eproto.base,
      &scc_info_Literal_flyteidl_2fcore_2fliterals_2eproto.base,}};

static void InitDefaultsParameterMap_flyteidl_2fcore_2finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_ParameterMap_default_instance_;
    new (ptr) ::flyteidl::core::ParameterMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ParameterMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ParameterMap_flyteidl_2fcore_2finterface_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParameterMap_flyteidl_2fcore_2finterface_2eproto}, {
      &scc_info_ParameterMapEntry_flyteidl_2fcore_2finterface_2eproto.base,}};

static void InitDefaultsParameterMapEntry_flyteidl_2fcore_2finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_ParameterMapEntry_default_instance_;
    new (ptr) ::flyteidl::core::ParameterMapEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ParameterMapEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ParameterMapEntry_flyteidl_2fcore_2finterface_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParameterMapEntry_flyteidl_2fcore_2finterface_2eproto}, {
      &scc_info_Parameter_flyteidl_2fcore_2finterface_2eproto.base,}};

void InitDefaults_flyteidl_2fcore_2finterface_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Variable_flyteidl_2fcore_2finterface_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VariableMap_flyteidl_2fcore_2finterface_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VariableMapEntry_flyteidl_2fcore_2finterface_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TypedInterface_flyteidl_2fcore_2finterface_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Parameter_flyteidl_2fcore_2finterface_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParameterMap_flyteidl_2fcore_2finterface_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParameterMapEntry_flyteidl_2fcore_2finterface_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fcore_2finterface_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fcore_2finterface_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fcore_2finterface_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fcore_2finterface_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Variable, type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Variable, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap, variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMapEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMapEntry, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMapEntry, var_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::TypedInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::TypedInterface, inputs_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::TypedInterface, outputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, var_),
  offsetof(::flyteidl::core::ParameterDefaultTypeInternal, default__),
  offsetof(::flyteidl::core::ParameterDefaultTypeInternal, required_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, behavior_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMapEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMapEntry, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMapEntry, parameter_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::Variable)},
  { 7, -1, sizeof(::flyteidl::core::VariableMap)},
  { 13, -1, sizeof(::flyteidl::core::VariableMapEntry)},
  { 20, -1, sizeof(::flyteidl::core::TypedInterface)},
  { 27, -1, sizeof(::flyteidl::core::Parameter)},
  { 36, -1, sizeof(::flyteidl::core::ParameterMap)},
  { 42, -1, sizeof(::flyteidl::core::ParameterMapEntry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_VariableMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_VariableMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_TypedInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ParameterMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ParameterMapEntry_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto = {
  {}, AddDescriptors_flyteidl_2fcore_2finterface_2eproto, "flyteidl/core/interface.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fcore_2finterface_2eproto::offsets,
  file_level_metadata_flyteidl_2fcore_2finterface_2eproto, 7, file_level_enum_descriptors_flyteidl_2fcore_2finterface_2eproto, file_level_service_descriptors_flyteidl_2fcore_2finterface_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fcore_2finterface_2eproto[] =
  "\n\035flyteidl/core/interface.proto\022\rflyteid"
  "l.core\032\031flyteidl/core/types.proto\032\034flyte"
  "idl/core/literals.proto\"I\n\010Variable\022(\n\004t"
  "ype\030\001 \001(\0132\032.flyteidl.core.LiteralType\022\023\n"
  "\013description\030\002 \001(\t\"A\n\013VariableMap\0222\n\tvar"
  "iables\030\001 \003(\0132\037.flyteidl.core.VariableMap"
  "Entry\"F\n\020VariableMapEntry\022\014\n\004name\030\001 \001(\t\022"
  "$\n\003var\030\002 \001(\0132\027.flyteidl.core.Variable\"i\n"
  "\016TypedInterface\022*\n\006inputs\030\001 \001(\0132\032.flytei"
  "dl.core.VariableMap\022+\n\007outputs\030\002 \001(\0132\032.f"
  "lyteidl.core.VariableMap\"|\n\tParameter\022$\n"
  "\003var\030\001 \001(\0132\027.flyteidl.core.Variable\022)\n\007d"
  "efault\030\002 \001(\0132\026.flyteidl.core.LiteralH\000\022\022"
  "\n\010required\030\003 \001(\010H\000B\n\n\010behavior\"D\n\014Parame"
  "terMap\0224\n\nparameters\030\001 \003(\0132 .flyteidl.co"
  "re.ParameterMapEntry\"N\n\021ParameterMapEntr"
  "y\022\014\n\004name\030\001 \001(\t\022+\n\tparameter\030\002 \001(\0132\030.fly"
  "teidl.core.ParameterB6Z4github.com/flyte"
  "org/flyteidl/gen/pb-go/flyteidl/coreb\006pr"
  "oto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fcore_2finterface_2eproto = {
  false, InitDefaults_flyteidl_2fcore_2finterface_2eproto, 
  descriptor_table_protodef_flyteidl_2fcore_2finterface_2eproto,
  "flyteidl/core/interface.proto", &assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto, 764,
};

void AddDescriptors_flyteidl_2fcore_2finterface_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_flyteidl_2fcore_2ftypes_2eproto,
    ::AddDescriptors_flyteidl_2fcore_2fliterals_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fcore_2finterface_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fcore_2finterface_2eproto = []() { AddDescriptors_flyteidl_2fcore_2finterface_2eproto(); return true; }();
namespace flyteidl {
namespace core {

// ===================================================================

void Variable::InitAsDefaultInstance() {
  ::flyteidl::core::_Variable_default_instance_._instance.get_mutable()->type_ = const_cast< ::flyteidl::core::LiteralType*>(
      ::flyteidl::core::LiteralType::internal_default_instance());
}
class Variable::HasBitSetters {
 public:
  static const ::flyteidl::core::LiteralType& type(const Variable* msg);
};

const ::flyteidl::core::LiteralType&
Variable::HasBitSetters::type(const Variable* msg) {
  return *msg->type_;
}
void Variable::clear_type() {
  if (GetArenaNoVirtual() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable::kTypeFieldNumber;
const int Variable::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable::Variable()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Variable)
}
Variable::Variable(const Variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_type()) {
    type_ = new ::flyteidl::core::LiteralType(*from.type_);
  } else {
    type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Variable)
}

void Variable::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Variable_flyteidl_2fcore_2finterface_2eproto.base);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = nullptr;
}

Variable::~Variable() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Variable)
  SharedDtor();
}

void Variable::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Variable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Variable& Variable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Variable_flyteidl_2fcore_2finterface_2eproto.base);
  return *internal_default_instance();
}


void Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Variable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Variable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.core.LiteralType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::LiteralType::_InternalParse;
        object = msg->mutable_type();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.core.Variable.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Variable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.LiteralType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Variable.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Variable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralType type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::type(this), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Variable.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Variable)
}

::google::protobuf::uint8* Variable::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralType type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::type(this), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Variable.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Variable)
  return target;
}

size_t Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Variable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .flyteidl.core.LiteralType type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  const Variable* source =
      ::google::protobuf::DynamicCastToGenerated<Variable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Variable)
    MergeFrom(*source);
  }
}

void Variable::MergeFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_type()) {
    mutable_type()->::flyteidl::core::LiteralType::MergeFrom(from.type());
  }
}

void Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable::CopyFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variable::IsInitialized() const {
  return true;
}

void Variable::Swap(Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable::InternalSwap(Variable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata Variable::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2finterface_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VariableMap::InitAsDefaultInstance() {
}
class VariableMap::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VariableMap::kVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VariableMap::VariableMap()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.VariableMap)
}
VariableMap::VariableMap(const VariableMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      variables_(from.variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.VariableMap)
}

void VariableMap::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VariableMap_flyteidl_2fcore_2finterface_2eproto.base);
}

VariableMap::~VariableMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.VariableMap)
  SharedDtor();
}

void VariableMap::SharedDtor() {
}

void VariableMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VariableMap& VariableMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VariableMap_flyteidl_2fcore_2finterface_2eproto.base);
  return *internal_default_instance();
}


void VariableMap::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.VariableMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variables_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VariableMap::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VariableMap*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .flyteidl.core.VariableMapEntry variables = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::core::VariableMapEntry::_InternalParse;
          object = msg->add_variables();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VariableMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.VariableMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.core.VariableMapEntry variables = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.VariableMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.VariableMap)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VariableMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.VariableMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.VariableMapEntry variables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->variables(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.VariableMap)
}

::google::protobuf::uint8* VariableMap::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.VariableMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.VariableMapEntry variables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->variables(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.VariableMap)
  return target;
}

size_t VariableMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.VariableMap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .flyteidl.core.VariableMapEntry variables = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->variables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->variables(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VariableMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.VariableMap)
  GOOGLE_DCHECK_NE(&from, this);
  const VariableMap* source =
      ::google::protobuf::DynamicCastToGenerated<VariableMap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.VariableMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.VariableMap)
    MergeFrom(*source);
  }
}

void VariableMap::MergeFrom(const VariableMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.VariableMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variables_.MergeFrom(from.variables_);
}

void VariableMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.VariableMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariableMap::CopyFrom(const VariableMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.VariableMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariableMap::IsInitialized() const {
  return true;
}

void VariableMap::Swap(VariableMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VariableMap::InternalSwap(VariableMap* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&variables_)->InternalSwap(CastToBase(&other->variables_));
}

::google::protobuf::Metadata VariableMap::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2finterface_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VariableMapEntry::InitAsDefaultInstance() {
  ::flyteidl::core::_VariableMapEntry_default_instance_._instance.get_mutable()->var_ = const_cast< ::flyteidl::core::Variable*>(
      ::flyteidl::core::Variable::internal_default_instance());
}
class VariableMapEntry::HasBitSetters {
 public:
  static const ::flyteidl::core::Variable& var(const VariableMapEntry* msg);
};

const ::flyteidl::core::Variable&
VariableMapEntry::HasBitSetters::var(const VariableMapEntry* msg) {
  return *msg->var_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VariableMapEntry::kNameFieldNumber;
const int VariableMapEntry::kVarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VariableMapEntry::VariableMapEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.VariableMapEntry)
}
VariableMapEntry::VariableMapEntry(const VariableMapEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_var()) {
    var_ = new ::flyteidl::core::Variable(*from.var_);
  } else {
    var_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.VariableMapEntry)
}

void VariableMapEntry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VariableMapEntry_flyteidl_2fcore_2finterface_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  var_ = nullptr;
}

VariableMapEntry::~VariableMapEntry() {
  // @@protoc_insertion_point(destructor:flyteidl.core.VariableMapEntry)
  SharedDtor();
}

void VariableMapEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete var_;
}

void VariableMapEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VariableMapEntry& VariableMapEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VariableMapEntry_flyteidl_2fcore_2finterface_2eproto.base);
  return *internal_default_instance();
}


void VariableMapEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.VariableMapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && var_ != nullptr) {
    delete var_;
  }
  var_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VariableMapEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VariableMapEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.core.VariableMapEntry.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.core.Variable var = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::Variable::_InternalParse;
        object = msg->mutable_var();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VariableMapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.VariableMapEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.VariableMapEntry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Variable var = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.VariableMapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.VariableMapEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VariableMapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.VariableMapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.VariableMapEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .flyteidl.core.Variable var = 2;
  if (this->has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::var(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.VariableMapEntry)
}

::google::protobuf::uint8* VariableMapEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.VariableMapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.VariableMapEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .flyteidl.core.Variable var = 2;
  if (this->has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::var(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.VariableMapEntry)
  return target;
}

size_t VariableMapEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.VariableMapEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .flyteidl.core.Variable var = 2;
  if (this->has_var()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *var_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VariableMapEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.VariableMapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const VariableMapEntry* source =
      ::google::protobuf::DynamicCastToGenerated<VariableMapEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.VariableMapEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.VariableMapEntry)
    MergeFrom(*source);
  }
}

void VariableMapEntry::MergeFrom(const VariableMapEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.VariableMapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_var()) {
    mutable_var()->::flyteidl::core::Variable::MergeFrom(from.var());
  }
}

void VariableMapEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.VariableMapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariableMapEntry::CopyFrom(const VariableMapEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.VariableMapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariableMapEntry::IsInitialized() const {
  return true;
}

void VariableMapEntry::Swap(VariableMapEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VariableMapEntry::InternalSwap(VariableMapEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(var_, other->var_);
}

::google::protobuf::Metadata VariableMapEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2finterface_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TypedInterface::InitAsDefaultInstance() {
  ::flyteidl::core::_TypedInterface_default_instance_._instance.get_mutable()->inputs_ = const_cast< ::flyteidl::core::VariableMap*>(
      ::flyteidl::core::VariableMap::internal_default_instance());
  ::flyteidl::core::_TypedInterface_default_instance_._instance.get_mutable()->outputs_ = const_cast< ::flyteidl::core::VariableMap*>(
      ::flyteidl::core::VariableMap::internal_default_instance());
}
class TypedInterface::HasBitSetters {
 public:
  static const ::flyteidl::core::VariableMap& inputs(const TypedInterface* msg);
  static const ::flyteidl::core::VariableMap& outputs(const TypedInterface* msg);
};

const ::flyteidl::core::VariableMap&
TypedInterface::HasBitSetters::inputs(const TypedInterface* msg) {
  return *msg->inputs_;
}
const ::flyteidl::core::VariableMap&
TypedInterface::HasBitSetters::outputs(const TypedInterface* msg) {
  return *msg->outputs_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypedInterface::kInputsFieldNumber;
const int TypedInterface::kOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypedInterface::TypedInterface()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.TypedInterface)
}
TypedInterface::TypedInterface(const TypedInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inputs()) {
    inputs_ = new ::flyteidl::core::VariableMap(*from.inputs_);
  } else {
    inputs_ = nullptr;
  }
  if (from.has_outputs()) {
    outputs_ = new ::flyteidl::core::VariableMap(*from.outputs_);
  } else {
    outputs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.TypedInterface)
}

void TypedInterface::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TypedInterface_flyteidl_2fcore_2finterface_2eproto.base);
  ::memset(&inputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&outputs_) -
      reinterpret_cast<char*>(&inputs_)) + sizeof(outputs_));
}

TypedInterface::~TypedInterface() {
  // @@protoc_insertion_point(destructor:flyteidl.core.TypedInterface)
  SharedDtor();
}

void TypedInterface::SharedDtor() {
  if (this != internal_default_instance()) delete inputs_;
  if (this != internal_default_instance()) delete outputs_;
}

void TypedInterface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TypedInterface& TypedInterface::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TypedInterface_flyteidl_2fcore_2finterface_2eproto.base);
  return *internal_default_instance();
}


void TypedInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.TypedInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && inputs_ != nullptr) {
    delete inputs_;
  }
  inputs_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && outputs_ != nullptr) {
    delete outputs_;
  }
  outputs_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TypedInterface::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TypedInterface*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.core.VariableMap inputs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::VariableMap::_InternalParse;
        object = msg->mutable_inputs();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.core.VariableMap outputs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::VariableMap::_InternalParse;
        object = msg->mutable_outputs();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TypedInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.TypedInterface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.VariableMap inputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.VariableMap outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.TypedInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.TypedInterface)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TypedInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.TypedInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.VariableMap inputs = 1;
  if (this->has_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::inputs(this), output);
  }

  // .flyteidl.core.VariableMap outputs = 2;
  if (this->has_outputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::outputs(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.TypedInterface)
}

::google::protobuf::uint8* TypedInterface::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.TypedInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.VariableMap inputs = 1;
  if (this->has_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::inputs(this), target);
  }

  // .flyteidl.core.VariableMap outputs = 2;
  if (this->has_outputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::outputs(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.TypedInterface)
  return target;
}

size_t TypedInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.TypedInterface)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.core.VariableMap inputs = 1;
  if (this->has_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inputs_);
  }

  // .flyteidl.core.VariableMap outputs = 2;
  if (this->has_outputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *outputs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypedInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.TypedInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const TypedInterface* source =
      ::google::protobuf::DynamicCastToGenerated<TypedInterface>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.TypedInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.TypedInterface)
    MergeFrom(*source);
  }
}

void TypedInterface::MergeFrom(const TypedInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.TypedInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_inputs()) {
    mutable_inputs()->::flyteidl::core::VariableMap::MergeFrom(from.inputs());
  }
  if (from.has_outputs()) {
    mutable_outputs()->::flyteidl::core::VariableMap::MergeFrom(from.outputs());
  }
}

void TypedInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.TypedInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypedInterface::CopyFrom(const TypedInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.TypedInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypedInterface::IsInitialized() const {
  return true;
}

void TypedInterface::Swap(TypedInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypedInterface::InternalSwap(TypedInterface* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(inputs_, other->inputs_);
  swap(outputs_, other->outputs_);
}

::google::protobuf::Metadata TypedInterface::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2finterface_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Parameter::InitAsDefaultInstance() {
  ::flyteidl::core::_Parameter_default_instance_._instance.get_mutable()->var_ = const_cast< ::flyteidl::core::Variable*>(
      ::flyteidl::core::Variable::internal_default_instance());
  ::flyteidl::core::_Parameter_default_instance_.default__ = const_cast< ::flyteidl::core::Literal*>(
      ::flyteidl::core::Literal::internal_default_instance());
  ::flyteidl::core::_Parameter_default_instance_.required_ = false;
}
class Parameter::HasBitSetters {
 public:
  static const ::flyteidl::core::Variable& var(const Parameter* msg);
  static const ::flyteidl::core::Literal& default_(const Parameter* msg);
};

const ::flyteidl::core::Variable&
Parameter::HasBitSetters::var(const Parameter* msg) {
  return *msg->var_;
}
const ::flyteidl::core::Literal&
Parameter::HasBitSetters::default_(const Parameter* msg) {
  return *msg->behavior_.default__;
}
void Parameter::set_allocated_default_(::flyteidl::core::Literal* default_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_behavior();
  if (default_) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      default_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_, submessage_arena);
    }
    set_has_default_();
    behavior_.default__ = default_;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Parameter.default)
}
void Parameter::clear_default_() {
  if (has_default_()) {
    delete behavior_.default__;
    clear_has_behavior();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameter::kVarFieldNumber;
const int Parameter::kDefaultFieldNumber;
const int Parameter::kRequiredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameter::Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Parameter)
}
Parameter::Parameter(const Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_var()) {
    var_ = new ::flyteidl::core::Variable(*from.var_);
  } else {
    var_ = nullptr;
  }
  clear_has_behavior();
  switch (from.behavior_case()) {
    case kDefault: {
      mutable_default_()->::flyteidl::core::Literal::MergeFrom(from.default_());
      break;
    }
    case kRequired: {
      set_required(from.required());
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Parameter)
}

void Parameter::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Parameter_flyteidl_2fcore_2finterface_2eproto.base);
  var_ = nullptr;
  clear_has_behavior();
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Parameter)
  SharedDtor();
}

void Parameter::SharedDtor() {
  if (this != internal_default_instance()) delete var_;
  if (has_behavior()) {
    clear_behavior();
  }
}

void Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Parameter& Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Parameter_flyteidl_2fcore_2finterface_2eproto.base);
  return *internal_default_instance();
}


void Parameter::clear_behavior() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.Parameter)
  switch (behavior_case()) {
    case kDefault: {
      delete behavior_.default__;
      break;
    }
    case kRequired: {
      // No need to clear
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BEHAVIOR_NOT_SET;
}


void Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && var_ != nullptr) {
    delete var_;
  }
  var_ = nullptr;
  clear_behavior();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Parameter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Parameter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.core.Variable var = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::Variable::_InternalParse;
        object = msg->mutable_var();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.core.Literal default = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::Literal::_InternalParse;
        object = msg->mutable_default_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool required = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_required(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Variable var = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Literal default = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool required = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          clear_behavior();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &behavior_.required_)));
          set_has_required();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Parameter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Variable var = 1;
  if (this->has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::var(this), output);
  }

  // .flyteidl.core.Literal default = 2;
  if (has_default_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::default_(this), output);
  }

  // bool required = 3;
  if (has_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->required(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Parameter)
}

::google::protobuf::uint8* Parameter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Variable var = 1;
  if (this->has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::var(this), target);
  }

  // .flyteidl.core.Literal default = 2;
  if (has_default_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::default_(this), target);
  }

  // bool required = 3;
  if (has_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->required(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Parameter)
  return target;
}

size_t Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.core.Variable var = 1;
  if (this->has_var()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *var_);
  }

  switch (behavior_case()) {
    // .flyteidl.core.Literal default = 2;
    case kDefault: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *behavior_.default__);
      break;
    }
    // bool required = 3;
    case kRequired: {
      total_size += 1 + 1;
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameter* source =
      ::google::protobuf::DynamicCastToGenerated<Parameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Parameter)
    MergeFrom(*source);
  }
}

void Parameter::MergeFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_var()) {
    mutable_var()->::flyteidl::core::Variable::MergeFrom(from.var());
  }
  switch (from.behavior_case()) {
    case kDefault: {
      mutable_default_()->::flyteidl::core::Literal::MergeFrom(from.default_());
      break;
    }
    case kRequired: {
      set_required(from.required());
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
}

void Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter::CopyFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter::IsInitialized() const {
  return true;
}

void Parameter::Swap(Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameter::InternalSwap(Parameter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(var_, other->var_);
  swap(behavior_, other->behavior_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Parameter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2finterface_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParameterMap::InitAsDefaultInstance() {
}
class ParameterMap::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterMap::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterMap::ParameterMap()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ParameterMap)
}
ParameterMap::ParameterMap(const ParameterMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      parameters_(from.parameters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ParameterMap)
}

void ParameterMap::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParameterMap_flyteidl_2fcore_2finterface_2eproto.base);
}

ParameterMap::~ParameterMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ParameterMap)
  SharedDtor();
}

void ParameterMap::SharedDtor() {
}

void ParameterMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterMap& ParameterMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParameterMap_flyteidl_2fcore_2finterface_2eproto.base);
  return *internal_default_instance();
}


void ParameterMap::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ParameterMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParameterMap::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParameterMap*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .flyteidl.core.ParameterMapEntry parameters = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::core::ParameterMapEntry::_InternalParse;
          object = msg->add_parameters();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParameterMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ParameterMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.core.ParameterMapEntry parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ParameterMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ParameterMap)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParameterMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ParameterMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.ParameterMapEntry parameters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->parameters(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ParameterMap)
}

::google::protobuf::uint8* ParameterMap::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ParameterMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.ParameterMapEntry parameters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->parameters(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ParameterMap)
  return target;
}

size_t ParameterMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ParameterMap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .flyteidl.core.ParameterMapEntry parameters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameters(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ParameterMap)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterMap* source =
      ::google::protobuf::DynamicCastToGenerated<ParameterMap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ParameterMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ParameterMap)
    MergeFrom(*source);
  }
}

void ParameterMap::MergeFrom(const ParameterMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ParameterMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
}

void ParameterMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ParameterMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterMap::CopyFrom(const ParameterMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ParameterMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterMap::IsInitialized() const {
  return true;
}

void ParameterMap::Swap(ParameterMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterMap::InternalSwap(ParameterMap* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&parameters_)->InternalSwap(CastToBase(&other->parameters_));
}

::google::protobuf::Metadata ParameterMap::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2finterface_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParameterMapEntry::InitAsDefaultInstance() {
  ::flyteidl::core::_ParameterMapEntry_default_instance_._instance.get_mutable()->parameter_ = const_cast< ::flyteidl::core::Parameter*>(
      ::flyteidl::core::Parameter::internal_default_instance());
}
class ParameterMapEntry::HasBitSetters {
 public:
  static const ::flyteidl::core::Parameter& parameter(const ParameterMapEntry* msg);
};

const ::flyteidl::core::Parameter&
ParameterMapEntry::HasBitSetters::parameter(const ParameterMapEntry* msg) {
  return *msg->parameter_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterMapEntry::kNameFieldNumber;
const int ParameterMapEntry::kParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterMapEntry::ParameterMapEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ParameterMapEntry)
}
ParameterMapEntry::ParameterMapEntry(const ParameterMapEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_parameter()) {
    parameter_ = new ::flyteidl::core::Parameter(*from.parameter_);
  } else {
    parameter_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ParameterMapEntry)
}

void ParameterMapEntry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParameterMapEntry_flyteidl_2fcore_2finterface_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_ = nullptr;
}

ParameterMapEntry::~ParameterMapEntry() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ParameterMapEntry)
  SharedDtor();
}

void ParameterMapEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameter_;
}

void ParameterMapEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterMapEntry& ParameterMapEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParameterMapEntry_flyteidl_2fcore_2finterface_2eproto.base);
  return *internal_default_instance();
}


void ParameterMapEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ParameterMapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && parameter_ != nullptr) {
    delete parameter_;
  }
  parameter_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParameterMapEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParameterMapEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.core.ParameterMapEntry.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.core.Parameter parameter = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::Parameter::_InternalParse;
        object = msg->mutable_parameter();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParameterMapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ParameterMapEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ParameterMapEntry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Parameter parameter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ParameterMapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ParameterMapEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParameterMapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ParameterMapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ParameterMapEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .flyteidl.core.Parameter parameter = 2;
  if (this->has_parameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::parameter(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ParameterMapEntry)
}

::google::protobuf::uint8* ParameterMapEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ParameterMapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ParameterMapEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .flyteidl.core.Parameter parameter = 2;
  if (this->has_parameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::parameter(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ParameterMapEntry)
  return target;
}

size_t ParameterMapEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ParameterMapEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .flyteidl.core.Parameter parameter = 2;
  if (this->has_parameter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterMapEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ParameterMapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterMapEntry* source =
      ::google::protobuf::DynamicCastToGenerated<ParameterMapEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ParameterMapEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ParameterMapEntry)
    MergeFrom(*source);
  }
}

void ParameterMapEntry::MergeFrom(const ParameterMapEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ParameterMapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_parameter()) {
    mutable_parameter()->::flyteidl::core::Parameter::MergeFrom(from.parameter());
  }
}

void ParameterMapEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ParameterMapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterMapEntry::CopyFrom(const ParameterMapEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ParameterMapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterMapEntry::IsInitialized() const {
  return true;
}

void ParameterMapEntry::Swap(ParameterMapEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterMapEntry::InternalSwap(ParameterMapEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parameter_, other->parameter_);
}

::google::protobuf::Metadata ParameterMapEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2finterface_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2finterface_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::core::Variable* Arena::CreateMaybeMessage< ::flyteidl::core::Variable >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::Variable >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::VariableMap* Arena::CreateMaybeMessage< ::flyteidl::core::VariableMap >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::VariableMap >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::VariableMapEntry* Arena::CreateMaybeMessage< ::flyteidl::core::VariableMapEntry >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::VariableMapEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::TypedInterface* Arena::CreateMaybeMessage< ::flyteidl::core::TypedInterface >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::TypedInterface >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::Parameter* Arena::CreateMaybeMessage< ::flyteidl::core::Parameter >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::Parameter >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::ParameterMap* Arena::CreateMaybeMessage< ::flyteidl::core::ParameterMap >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::ParameterMap >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::ParameterMapEntry* Arena::CreateMaybeMessage< ::flyteidl::core::ParameterMapEntry >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::ParameterMapEntry >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
