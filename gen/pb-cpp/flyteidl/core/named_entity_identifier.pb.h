// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/named_entity_identifier.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fcore_2fnamed_5fentity_5fidentifier_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fcore_2fnamed_5fentity_5fidentifier_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/core/identifier.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fnamed_5fentity_5fidentifier_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fcore_2fnamed_5fentity_5fidentifier_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fcore_2fnamed_5fentity_5fidentifier_2eproto();
namespace flyteidl {
namespace core {
class NamedEntityIdentifier;
class NamedEntityIdentifierDefaultTypeInternal;
extern NamedEntityIdentifierDefaultTypeInternal _NamedEntityIdentifier_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::core::NamedEntityIdentifier* Arena::CreateMaybeMessage<::flyteidl::core::NamedEntityIdentifier>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace core {

// ===================================================================

class NamedEntityIdentifier final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.core.NamedEntityIdentifier) */ {
 public:
  NamedEntityIdentifier();
  virtual ~NamedEntityIdentifier();

  NamedEntityIdentifier(const NamedEntityIdentifier& from);

  inline NamedEntityIdentifier& operator=(const NamedEntityIdentifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NamedEntityIdentifier(NamedEntityIdentifier&& from) noexcept
    : NamedEntityIdentifier() {
    *this = ::std::move(from);
  }

  inline NamedEntityIdentifier& operator=(NamedEntityIdentifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NamedEntityIdentifier& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NamedEntityIdentifier* internal_default_instance() {
    return reinterpret_cast<const NamedEntityIdentifier*>(
               &_NamedEntityIdentifier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NamedEntityIdentifier* other);
  friend void swap(NamedEntityIdentifier& a, NamedEntityIdentifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NamedEntityIdentifier* New() const final {
    return CreateMaybeMessage<NamedEntityIdentifier>(nullptr);
  }

  NamedEntityIdentifier* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NamedEntityIdentifier>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NamedEntityIdentifier& from);
  void MergeFrom(const NamedEntityIdentifier& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NamedEntityIdentifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 2;
  void clear_project();
  static const int kProjectFieldNumber = 2;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string domain = 3;
  void clear_domain();
  static const int kDomainFieldNumber = 3;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .flyteidl.core.ResourceType resource_type = 1;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 1;
  ::flyteidl::core::ResourceType resource_type() const;
  void set_resource_type(::flyteidl::core::ResourceType value);

  // @@protoc_insertion_point(class_scope:flyteidl.core.NamedEntityIdentifier)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int resource_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fcore_2fnamed_5fentity_5fidentifier_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NamedEntityIdentifier

// .flyteidl.core.ResourceType resource_type = 1;
inline void NamedEntityIdentifier::clear_resource_type() {
  resource_type_ = 0;
}
inline ::flyteidl::core::ResourceType NamedEntityIdentifier::resource_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.core.NamedEntityIdentifier.resource_type)
  return static_cast< ::flyteidl::core::ResourceType >(resource_type_);
}
inline void NamedEntityIdentifier::set_resource_type(::flyteidl::core::ResourceType value) {
  
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.core.NamedEntityIdentifier.resource_type)
}

// string project = 2;
inline void NamedEntityIdentifier::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NamedEntityIdentifier::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.core.NamedEntityIdentifier.project)
  return project_.GetNoArena();
}
inline void NamedEntityIdentifier::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.core.NamedEntityIdentifier.project)
}
#if LANG_CXX11
inline void NamedEntityIdentifier::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.core.NamedEntityIdentifier.project)
}
#endif
inline void NamedEntityIdentifier::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.core.NamedEntityIdentifier.project)
}
inline void NamedEntityIdentifier::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.core.NamedEntityIdentifier.project)
}
inline ::std::string* NamedEntityIdentifier::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.core.NamedEntityIdentifier.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NamedEntityIdentifier::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.core.NamedEntityIdentifier.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NamedEntityIdentifier::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.NamedEntityIdentifier.project)
}

// string domain = 3;
inline void NamedEntityIdentifier::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NamedEntityIdentifier::domain() const {
  // @@protoc_insertion_point(field_get:flyteidl.core.NamedEntityIdentifier.domain)
  return domain_.GetNoArena();
}
inline void NamedEntityIdentifier::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.core.NamedEntityIdentifier.domain)
}
#if LANG_CXX11
inline void NamedEntityIdentifier::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.core.NamedEntityIdentifier.domain)
}
#endif
inline void NamedEntityIdentifier::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.core.NamedEntityIdentifier.domain)
}
inline void NamedEntityIdentifier::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.core.NamedEntityIdentifier.domain)
}
inline ::std::string* NamedEntityIdentifier::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.core.NamedEntityIdentifier.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NamedEntityIdentifier::release_domain() {
  // @@protoc_insertion_point(field_release:flyteidl.core.NamedEntityIdentifier.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NamedEntityIdentifier::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.NamedEntityIdentifier.domain)
}

// string name = 4;
inline void NamedEntityIdentifier::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NamedEntityIdentifier::name() const {
  // @@protoc_insertion_point(field_get:flyteidl.core.NamedEntityIdentifier.name)
  return name_.GetNoArena();
}
inline void NamedEntityIdentifier::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.core.NamedEntityIdentifier.name)
}
#if LANG_CXX11
inline void NamedEntityIdentifier::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.core.NamedEntityIdentifier.name)
}
#endif
inline void NamedEntityIdentifier::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.core.NamedEntityIdentifier.name)
}
inline void NamedEntityIdentifier::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.core.NamedEntityIdentifier.name)
}
inline ::std::string* NamedEntityIdentifier::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.core.NamedEntityIdentifier.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NamedEntityIdentifier::release_name() {
  // @@protoc_insertion_point(field_release:flyteidl.core.NamedEntityIdentifier.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NamedEntityIdentifier::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.NamedEntityIdentifier.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fcore_2fnamed_5fentity_5fidentifier_2eproto
