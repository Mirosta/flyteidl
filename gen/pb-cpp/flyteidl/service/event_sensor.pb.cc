// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/event_sensor.proto

#include "flyteidl/service/event_sensor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace flyteidl {
namespace service {
}  // namespace service
}  // namespace flyteidl
void InitDefaults_flyteidl_2fservice_2fevent_5fsensor_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_flyteidl_2fservice_2fevent_5fsensor_2eproto = nullptr;
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fevent_5fsensor_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fevent_5fsensor_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fevent_5fsensor_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = nullptr;
static constexpr ::google::protobuf::Message* const* file_default_instances = nullptr;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fevent_5fsensor_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fevent_5fsensor_2eproto, "flyteidl/service/event_sensor.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fevent_5fsensor_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fevent_5fsensor_2eproto, 0, file_level_enum_descriptors_flyteidl_2fservice_2fevent_5fsensor_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fevent_5fsensor_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fevent_5fsensor_2eproto[] =
  "\n#flyteidl/service/event_sensor.proto\022\020f"
  "lyteidl.service\032\034google/api/annotations."
  "proto\032\033flyteidl/event/sensor.proto\032!flyt"
  "eidl/event/sensor_state.proto\032,protoc-ge"
  "n-swagger/options/annotations.proto2\265\006\n\022"
  "EventSensorService\022\261\001\n\020ListEventTargets\022"
  "&.flyteidl.event.EventTargetListRequest\032"
  "\037.flyteidl.event.EventTargetList\"T\202\323\344\223\002\036"
  "\022\034/api/v1/targets/{event_type}\222A-\032+Retri"
  "eve existing event target definitions.\022\265"
  "\001\n\rEventOccurred\022$.flyteidl.event.EventO"
  "ccurredRequest\032%.flyteidl.event.EventOcc"
  "urredResponse\"W\202\323\344\223\002\022\022\020/api/v1/occurred\222"
  "A<\032:Notifies a downstream consumer that "
  "an event has occurred.\022\324\001\n\023GetEventSenso"
  "rState\022*.flyteidl.event.EventSensorState"
  "GetRequest\032+.flyteidl.event.EventSensorS"
  "tateGetResponse\"d\202\323\344\223\002#\022!/api/v1/sensor_"
  "state/{event_type}\222A8\0326Retrieve saved st"
  "ate for a specific event sensor type.\022\333\001"
  "\n\026UpdateEventSensorState\022-.flyteidl.even"
  "t.EventSensorStateUpdateRequest\032..flytei"
  "dl.event.EventSensorStateUpdateResponse\""
  "b\202\323\344\223\002#\032!/api/v1/sensor_state/{event_typ"
  "e}\222A6\0324Update saved state for a specific"
  " event sensor type.B9Z7github.com/flyteo"
  "rg/flyteidl/gen/pb-go/flyteidl/serviceb\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fevent_5fsensor_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fevent_5fsensor_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fevent_5fsensor_2eproto,
  "flyteidl/service/event_sensor.proto", &assign_descriptors_table_flyteidl_2fservice_2fevent_5fsensor_2eproto, 1086,
};

void AddDescriptors_flyteidl_2fservice_2fevent_5fsensor_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[4] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_flyteidl_2fevent_2fsensor_2eproto,
    ::AddDescriptors_flyteidl_2fevent_2fsensor_5fstate_2eproto,
    ::AddDescriptors_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fevent_5fsensor_2eproto, deps, 4);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fevent_5fsensor_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fevent_5fsensor_2eproto(); return true; }();
namespace flyteidl {
namespace service {

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
