// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/admin.proto

#include "flyteidl/service/admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace flyteidl {
namespace service {
}  // namespace service
}  // namespace flyteidl
void InitDefaults_flyteidl_2fservice_2fadmin_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = nullptr;
static constexpr ::google::protobuf::Message* const* file_default_instances = nullptr;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fadmin_2eproto, "flyteidl/service/admin.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fadmin_2eproto, 0, file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto[] =
  "\n\034flyteidl/service/admin.proto\022\020flyteidl"
  ".service\032\034google/api/annotations.proto\032\034"
  "flyteidl/admin/project.proto\032.flyteidl/a"
  "dmin/project_domain_attributes.proto\032\031fl"
  "yteidl/admin/task.proto\032\035flyteidl/admin/"
  "workflow.proto\032+flyteidl/admin/launch_pl"
  "an_attributes.proto\032(flyteidl/admin/work"
  "flow_attributes.proto\032 flyteidl/admin/la"
  "unch_plan.proto\032\032flyteidl/admin/event.pr"
  "oto\032\036flyteidl/admin/execution.proto\032\'fly"
  "teidl/admin/matchable_resource.proto\032#fl"
  "yteidl/admin/node_execution.proto\032#flyte"
  "idl/admin/task_execution.proto\032\034flyteidl"
  "/admin/version.proto\032\033flyteidl/admin/com"
  "mon.proto\032,protoc-gen-swagger/options/an"
  "notations.proto2\274p\n\014AdminService\022\305\002\n\nCre"
  "ateTask\022!.flyteidl.admin.TaskCreateReque"
  "st\032\".flyteidl.admin.TaskCreateResponse\"\357"
  "\001\202\323\344\223\002\022\"\r/api/v1/tasks:\001*\222A\323\001\032&Create an"
  "d register a task definition.JB\n\003400\022;\n9"
  "Returned for bad request that may have f"
  "ailed validation.Je\n\003409\022^\n\\Returned for"
  " a request that references an identical "
  "entity that has already been registered."
  "\022\262\001\n\007GetTask\022 .flyteidl.admin.ObjectGetR"
  "equest\032\024.flyteidl.admin.Task\"o\202\323\344\223\002\?\022=/a"
  "pi/v1/tasks/{id.project}/{id.domain}/{id"
  ".name}/{id.version}\222A\'\032%Retrieve an exis"
  "ting task definition.\022\336\001\n\013ListTaskIds\0220."
  "flyteidl.admin.NamedEntityIdentifierList"
  "Request\032).flyteidl.admin.NamedEntityIden"
  "tifierList\"r\202\323\344\223\002%\022#/api/v1/task_ids/{pr"
  "oject}/{domain}\222AD\032BFetch existing task "
  "definition identifiers matching input fi"
  "lters.\022\353\001\n\tListTasks\022#.flyteidl.admin.Re"
  "sourceListRequest\032\030.flyteidl.admin.TaskL"
  "ist\"\236\001\202\323\344\223\002\\\0220/api/v1/tasks/{id.project}"
  "/{id.domain}/{id.name}Z(\022&/api/v1/tasks/"
  "{id.project}/{id.domain}\222A9\0327Fetch exist"
  "ing task definitions matching input filt"
  "ers.\022\331\002\n\016CreateWorkflow\022%.flyteidl.admin"
  ".WorkflowCreateRequest\032&.flyteidl.admin."
  "WorkflowCreateResponse\"\367\001\202\323\344\223\002\026\"\021/api/v1"
  "/workflows:\001*\222A\327\001\032*Create and register a"
  " workflow definition.JB\n\003400\022;\n9Returned"
  " for bad request that may have failed va"
  "lidation.Je\n\003409\022^\n\\Returned for a reque"
  "st that references an identical entity t"
  "hat has already been registered.\022\302\001\n\013Get"
  "Workflow\022 .flyteidl.admin.ObjectGetReque"
  "st\032\030.flyteidl.admin.Workflow\"w\202\323\344\223\002C\022A/a"
  "pi/v1/workflows/{id.project}/{id.domain}"
  "/{id.name}/{id.version}\222A+\032)Retrieve an "
  "existing workflow definition.\022\355\001\n\017ListWo"
  "rkflowIds\0220.flyteidl.admin.NamedEntityId"
  "entifierListRequest\032).flyteidl.admin.Nam"
  "edEntityIdentifierList\"}\202\323\344\223\002)\022\'/api/v1/"
  "workflow_ids/{project}/{domain}\222AK\032IFetc"
  "h an existing workflow definition identi"
  "fiers matching input filters.\022\377\001\n\rListWo"
  "rkflows\022#.flyteidl.admin.ResourceListReq"
  "uest\032\034.flyteidl.admin.WorkflowList\"\252\001\202\323\344"
  "\223\002d\0224/api/v1/workflows/{id.project}/{id."
  "domain}/{id.name}Z,\022*/api/v1/workflows/{"
  "id.project}/{id.domain}\222A=\032;Fetch existi"
  "ng workflow definitions matching input f"
  "ilters.\022\345\002\n\020CreateLaunchPlan\022\'.flyteidl."
  "admin.LaunchPlanCreateRequest\032(.flyteidl"
  ".admin.LaunchPlanCreateResponse\"\375\001\202\323\344\223\002\031"
  "\"\024/api/v1/launch_plans:\001*\222A\332\001\032-Create an"
  "d register a launch plan definition.JB\n\003"
  "400\022;\n9Returned for bad request that may"
  " have failed validation.Je\n\003409\022^\n\\Retur"
  "ned for a request that references an ide"
  "ntical entity that has already been regi"
  "stered.\022\314\001\n\rGetLaunchPlan\022 .flyteidl.adm"
  "in.ObjectGetRequest\032\032.flyteidl.admin.Lau"
  "nchPlan\"}\202\323\344\223\002F\022D/api/v1/launch_plans/{i"
  "d.project}/{id.domain}/{id.name}/{id.ver"
  "sion}\222A.\032,Retrieve an existing launch pl"
  "an definition.\022\363\001\n\023GetActiveLaunchPlan\022\'"
  ".flyteidl.admin.ActiveLaunchPlanRequest\032"
  "\032.flyteidl.admin.LaunchPlan\"\226\001\202\323\344\223\002@\022>/a"
  "pi/v1/active_launch_plans/{id.project}/{"
  "id.domain}/{id.name}\222AM\032KRetrieve the ac"
  "tive launch plan version specified by in"
  "put request filters.\022\353\001\n\025ListActiveLaunc"
  "hPlans\022+.flyteidl.admin.ActiveLaunchPlan"
  "ListRequest\032\036.flyteidl.admin.LaunchPlanL"
  "ist\"\204\001\202\323\344\223\0020\022./api/v1/active_launch_plan"
  "s/{project}/{domain}\222AK\032IFetch the activ"
  "e launch plan versions specified by inpu"
  "t request filters.\022\363\001\n\021ListLaunchPlanIds"
  "\0220.flyteidl.admin.NamedEntityIdentifierL"
  "istRequest\032).flyteidl.admin.NamedEntityI"
  "dentifierList\"\200\001\202\323\344\223\002,\022*/api/v1/launch_p"
  "lan_ids/{project}/{domain}\222AK\032IFetch exi"
  "sting launch plan definition identifiers"
  " matching input filters.\022\214\002\n\017ListLaunchP"
  "lans\022#.flyteidl.admin.ResourceListReques"
  "t\032\036.flyteidl.admin.LaunchPlanList\"\263\001\202\323\344\223"
  "\002j\0227/api/v1/launch_plans/{id.project}/{i"
  "d.domain}/{id.name}Z/\022-/api/v1/launch_pl"
  "ans/{id.project}/{id.domain}\222A@\032>Fetch e"
  "xisting launch plan definitions matching"
  " input filters.\022\300\006\n\020UpdateLaunchPlan\022\'.f"
  "lyteidl.admin.LaunchPlanUpdateRequest\032(."
  "flyteidl.admin.LaunchPlanUpdateResponse\""
  "\330\005\202\323\344\223\002I\032D/api/v1/launch_plans/{id.proje"
  "ct}/{id.domain}/{id.name}/{id.version}:\001"
  "*\222A\205\005\032\202\005Update the status of an existing"
  " launch plan definition. At most one lau"
  "nch plan version for a given {project, d"
  "omain, name} can be active at a time. If"
  " this call sets a launch plan to active "
  "and existing version is already active, "
  "the result of this call will be that the"
  " formerly active launch plan will be mad"
  "e inactive and specified launch plan in "
  "this request will be made active. In the"
  " event that the formerly active launch p"
  "lan had a schedule associated it with it"
  ", this schedule will be disabled. If the"
  " reference launch plan in this request i"
  "s being set to active and has a schedule"
  " associated with it, the schedule will b"
  "e enabled.\022\242\001\n\017CreateExecution\022&.flyteid"
  "l.admin.ExecutionCreateRequest\032\'.flyteid"
  "l.admin.ExecutionCreateResponse\">\202\323\344\223\002\027\""
  "\022/api/v1/executions:\001*\222A\036\032\034Create a work"
  "flow execution.\022\261\001\n\021RelaunchExecution\022(."
  "flyteidl.admin.ExecutionRelaunchRequest\032"
  "\'.flyteidl.admin.ExecutionCreateResponse"
  "\"I\202\323\344\223\002 \"\033/api/v1/executions/relaunch:\001*"
  "\222A \032\036Relaunch a workflow execution.\022\235\005\n\020"
  "RecoverExecution\022\'.flyteidl.admin.Execut"
  "ionRecoverRequest\032\'.flyteidl.admin.Execu"
  "tionCreateResponse\"\266\004\202\323\344\223\002\037\"\032/api/v1/exe"
  "cutions/recover:\001*\222A\215\004\032\212\004Recreates a pre"
  "viously-run workflow execution that will"
  " only start executing from the last know"
  "n failure point. In Recover mode, users "
  "cannot change any input parameters or up"
  "date the version of the execution. This "
  "is extremely useful to recover from syst"
  "em errors and byzantine faults like - Lo"
  "ss of K8s cluster, bugs in platform or i"
  "nstability, machine failures, downstream"
  " system failures (downstream services), "
  "or simply to recover executions that fai"
  "led because of retry exhaustion and shou"
  "ld complete if tried again.\022\302\001\n\014GetExecu"
  "tion\022+.flyteidl.admin.WorkflowExecutionG"
  "etRequest\032\031.flyteidl.admin.Execution\"j\202\323"
  "\344\223\0027\0225/api/v1/executions/{id.project}/{i"
  "d.domain}/{id.name}\222A*\032(Retrieve an exis"
  "ting workflow execution.\022\326\001\n\017UpdateExecu"
  "tion\022&.flyteidl.admin.ExecutionUpdateReq"
  "uest\032\'.flyteidl.admin.ExecutionUpdateRes"
  "ponse\"r\202\323\344\223\002:\0325/api/v1/executions/{id.pr"
  "oject}/{id.domain}/{id.name}:\001*\222A/\032-Upda"
  "te execution belonging to project domain"
  ".\022\202\002\n\020GetExecutionData\022/.flyteidl.admin."
  "WorkflowExecutionGetDataRequest\0320.flytei"
  "dl.admin.WorkflowExecutionGetDataRespons"
  "e\"\212\001\202\323\344\223\002<\022:/api/v1/data/executions/{id."
  "project}/{id.domain}/{id.name}\222AE\032CRetri"
  "eve input and output data from an existi"
  "ng workflow execution.\022\310\001\n\016ListExecution"
  "s\022#.flyteidl.admin.ResourceListRequest\032\035"
  ".flyteidl.admin.ExecutionList\"r\202\323\344\223\002-\022+/"
  "api/v1/executions/{id.project}/{id.domai"
  "n}\222A<\032:Fetch existing workflow execution"
  "s matching input filters.\022\364\001\n\022TerminateE"
  "xecution\022).flyteidl.admin.ExecutionTermi"
  "nateRequest\032*.flyteidl.admin.ExecutionTe"
  "rminateResponse\"\206\001\202\323\344\223\002:*5/api/v1/execut"
  "ions/{id.project}/{id.domain}/{id.name}:"
  "\001*\222AC\032ATerminate the active workflow exe"
  "cution specified in the request.\022\374\001\n\020Get"
  "NodeExecution\022\'.flyteidl.admin.NodeExecu"
  "tionGetRequest\032\035.flyteidl.admin.NodeExec"
  "ution\"\237\001\202\323\344\223\002p\022n/api/v1/node_executions/"
  "{id.execution_id.project}/{id.execution_"
  "id.domain}/{id.execution_id.name}/{id.no"
  "de_id}\222A&\032$Retrieve an existing node exe"
  "cution.\022\232\002\n\022ListNodeExecutions\022(.flyteid"
  "l.admin.NodeExecutionListRequest\032!.flyte"
  "idl.admin.NodeExecutionList\"\266\001\202\323\344\223\002u\022s/a"
  "pi/v1/node_executions/{workflow_executio"
  "n_id.project}/{workflow_execution_id.dom"
  "ain}/{workflow_execution_id.name}\222A8\0326Fe"
  "tch existing node executions matching in"
  "put filters.\022\357\004\n\031ListNodeExecutionsForTa"
  "sk\022/.flyteidl.admin.NodeExecutionForTask"
  "ListRequest\032!.flyteidl.admin.NodeExecuti"
  "onList\"\375\003\202\323\344\223\002\254\003\022\251\003/api/v1/children/task"
  "_executions/{task_execution_id.node_exec"
  "ution_id.execution_id.project}/{task_exe"
  "cution_id.node_execution_id.execution_id"
  ".domain}/{task_execution_id.node_executi"
  "on_id.execution_id.name}/{task_execution"
  "_id.node_execution_id.node_id}/{task_exe"
  "cution_id.task_id.project}/{task_executi"
  "on_id.task_id.domain}/{task_execution_id"
  ".task_id.name}/{task_execution_id.task_i"
  "d.version}/{task_execution_id.retry_atte"
  "mpt}\222AG\032EFetch child node executions lau"
  "nched by the specified task execution.\022\263"
  "\002\n\024GetNodeExecutionData\022+.flyteidl.admin"
  ".NodeExecutionGetDataRequest\032,.flyteidl."
  "admin.NodeExecutionGetDataResponse\"\277\001\202\323\344"
  "\223\002u\022s/api/v1/data/node_executions/{id.ex"
  "ecution_id.project}/{id.execution_id.dom"
  "ain}/{id.execution_id.name}/{id.node_id}"
  "\222AA\032\?Retrieve input and output data from"
  " an existing node execution.\022\227\001\n\017Registe"
  "rProject\022&.flyteidl.admin.ProjectRegiste"
  "rRequest\032\'.flyteidl.admin.ProjectRegiste"
  "rResponse\"3\202\323\344\223\002\025\"\020/api/v1/projects:\001*\222A"
  "\025\032\023Register a project.\022\207\001\n\rUpdateProject"
  "\022\027.flyteidl.admin.Project\032%.flyteidl.adm"
  "in.ProjectUpdateResponse\"6\202\323\344\223\002\032\032\025/api/v"
  "1/projects/{id}:\001*\222A\023\032\021Update a project."
  "\022\205\001\n\014ListProjects\022\".flyteidl.admin.Proje"
  "ctListRequest\032\030.flyteidl.admin.Projects\""
  "7\202\323\344\223\002\022\022\020/api/v1/projects\222A\034\032\032Fetch regi"
  "stered projects.\022\335\001\n\023CreateWorkflowEvent"
  "\022-.flyteidl.admin.WorkflowExecutionEvent"
  "Request\032..flyteidl.admin.WorkflowExecuti"
  "onEventResponse\"g\202\323\344\223\002\035\"\030/api/v1/events/"
  "workflows:\001*\222AA\032\?Create a workflow execu"
  "tion event recording a phase transition."
  "\022\311\001\n\017CreateNodeEvent\022).flyteidl.admin.No"
  "deExecutionEventRequest\032*.flyteidl.admin"
  ".NodeExecutionEventResponse\"_\202\323\344\223\002\031\"\024/ap"
  "i/v1/events/nodes:\001*\222A=\032;Create a node e"
  "xecution event recording a phase transit"
  "ion.\022\311\001\n\017CreateTaskEvent\022).flyteidl.admi"
  "n.TaskExecutionEventRequest\032*.flyteidl.a"
  "dmin.TaskExecutionEventResponse\"_\202\323\344\223\002\031\""
  "\024/api/v1/events/tasks:\001*\222A=\032;Create a ta"
  "sk execution event recording a phase tra"
  "nsition.\022\251\003\n\020GetTaskExecution\022\'.flyteidl"
  ".admin.TaskExecutionGetRequest\032\035.flyteid"
  "l.admin.TaskExecution\"\314\002\202\323\344\223\002\234\002\022\231\002/api/v"
  "1/task_executions/{id.node_execution_id."
  "execution_id.project}/{id.node_execution"
  "_id.execution_id.domain}/{id.node_execut"
  "ion_id.execution_id.name}/{id.node_execu"
  "tion_id.node_id}/{id.task_id.project}/{i"
  "d.task_id.domain}/{id.task_id.name}/{id."
  "task_id.version}/{id.retry_attempt}\222A&\032$"
  "Retrieve an existing task execution.\022\323\002\n"
  "\022ListTaskExecutions\022(.flyteidl.admin.Tas"
  "kExecutionListRequest\032!.flyteidl.admin.T"
  "askExecutionList\"\357\001\202\323\344\223\002\255\001\022\252\001/api/v1/tas"
  "k_executions/{node_execution_id.executio"
  "n_id.project}/{node_execution_id.executi"
  "on_id.domain}/{node_execution_id.executi"
  "on_id.name}/{node_execution_id.node_id}\222"
  "A8\0326Fetch existing task executions match"
  "ing input filters.\022\340\003\n\024GetTaskExecutionD"
  "ata\022+.flyteidl.admin.TaskExecutionGetDat"
  "aRequest\032,.flyteidl.admin.TaskExecutionG"
  "etDataResponse\"\354\002\202\323\344\223\002\241\002\022\236\002/api/v1/data/"
  "task_executions/{id.node_execution_id.ex"
  "ecution_id.project}/{id.node_execution_i"
  "d.execution_id.domain}/{id.node_executio"
  "n_id.execution_id.name}/{id.node_executi"
  "on_id.node_id}/{id.task_id.project}/{id."
  "task_id.domain}/{id.task_id.name}/{id.ta"
  "sk_id.version}/{id.retry_attempt}\222AA\032\?Re"
  "trieve input and output data from an exi"
  "sting task execution.\022\277\002\n\035UpdateProjectD"
  "omainAttributes\0224.flyteidl.admin.Project"
  "DomainAttributesUpdateRequest\0325.flyteidl"
  ".admin.ProjectDomainAttributesUpdateResp"
  "onse\"\260\001\202\323\344\223\002O\032J/api/v1/project_domain_at"
  "tributes/{attributes.project}/{attribute"
  "s.domain}:\001*\222AX\032VUpdate the customized r"
  "esource attributes associated with a pro"
  "ject-domain combination\022\237\002\n\032GetProjectDo"
  "mainAttributes\0221.flyteidl.admin.ProjectD"
  "omainAttributesGetRequest\0322.flyteidl.adm"
  "in.ProjectDomainAttributesGetResponse\"\231\001"
  "\202\323\344\223\0026\0224/api/v1/project_domain_attribute"
  "s/{project}/{domain}\222AZ\032XRetrieve the cu"
  "stomized resource attributes associated "
  "with a project-domain combination\022\251\002\n\035De"
  "leteProjectDomainAttributes\0224.flyteidl.a"
  "dmin.ProjectDomainAttributesDeleteReques"
  "t\0325.flyteidl.admin.ProjectDomainAttribut"
  "esDeleteResponse\"\232\001\202\323\344\223\0029*4/api/v1/proje"
  "ct_domain_attributes/{project}/{domain}:"
  "\001*\222AX\032VDelete the customized resource at"
  "tributes associated with a project-domai"
  "n combination\022\316\002\n\030UpdateWorkflowAttribut"
  "es\022/.flyteidl.admin.WorkflowAttributesUp"
  "dateRequest\0320.flyteidl.admin.WorkflowAtt"
  "ributesUpdateResponse\"\316\001\202\323\344\223\002_\032Z/api/v1/"
  "workflow_attributes/{attributes.project}"
  "/{attributes.domain}/{attributes.workflo"
  "w}:\001*\222Af\032dUpdate the customized resource"
  " attributes associated with a project, d"
  "omain and workflow combination\022\243\002\n\025GetWo"
  "rkflowAttributes\022,.flyteidl.admin.Workfl"
  "owAttributesGetRequest\032-.flyteidl.admin."
  "WorkflowAttributesGetResponse\"\254\001\202\323\344\223\002;\0229"
  "/api/v1/workflow_attributes/{project}/{d"
  "omain}/{workflow}\222Ah\032fRetrieve the custo"
  "mized resource attributes associated wit"
  "h a project, domain and workflow combina"
  "tion\022\255\002\n\030DeleteWorkflowAttributes\022/.flyt"
  "eidl.admin.WorkflowAttributesDeleteReque"
  "st\0320.flyteidl.admin.WorkflowAttributesDe"
  "leteResponse\"\255\001\202\323\344\223\002>*9/api/v1/workflow_"
  "attributes/{project}/{domain}/{workflow}"
  ":\001*\222Af\032dDelete the customized resource a"
  "ttributes associated with a project, dom"
  "ain and workflow combination\022\375\002\n\032UpdateL"
  "aunchPlanAttributes\0221.flyteidl.admin.Lau"
  "nchPlanAttributesUpdateRequest\0322.flyteid"
  "l.admin.LaunchPlanAttributesUpdateRespon"
  "se\"\367\001\202\323\344\223\002{\032v/api/v1/launch_plan_attribu"
  "tes/{attributes.project}/{attributes.dom"
  "ain}/{attributes.workflow}/{attributes.l"
  "aunch_plan}:\001*\222As\032qUpdate the customized"
  " resource attributes associated with a p"
  "roject, domain, workflow and launch plan"
  " combination\022\307\002\n\027GetLaunchPlanAttributes"
  "\022..flyteidl.admin.LaunchPlanAttributesGe"
  "tRequest\032/.flyteidl.admin.LaunchPlanAttr"
  "ibutesGetResponse\"\312\001\202\323\344\223\002L\022J/api/v1/laun"
  "ch_plan_attributes/{project}/{domain}/{w"
  "orkflow}/{launch_plan}\222Au\032sRetrieve the "
  "customized resource attributes associate"
  "d with a project, domain, workflow and l"
  "aunch plan combination\022\321\002\n\032DeleteLaunchP"
  "lanAttributes\0221.flyteidl.admin.LaunchPla"
  "nAttributesDeleteRequest\0322.flyteidl.admi"
  "n.LaunchPlanAttributesDeleteResponse\"\313\001\202"
  "\323\344\223\002O*J/api/v1/launch_plan_attributes/{p"
  "roject}/{domain}/{workflow}/{launch_plan"
  "}:\001*\222As\032qDelete the customized resource "
  "attributes associated with a project, do"
  "main, workflow and launch plan combinati"
  "on\022\341\001\n\027ListMatchableAttributes\022..flyteid"
  "l.admin.ListMatchableAttributesRequest\032/"
  ".flyteidl.admin.ListMatchableAttributesR"
  "esponse\"e\202\323\344\223\002\036\022\034/api/v1/matchable_attri"
  "butes\222A>\032<Retrieve a list of MatchableAt"
  "tributesConfiguration objects.\022\200\002\n\021ListN"
  "amedEntities\022&.flyteidl.admin.NamedEntit"
  "yListRequest\032\037.flyteidl.admin.NamedEntit"
  "yList\"\241\001\202\323\344\223\002;\0229/api/v1/named_entities/{"
  "resource_type}/{project}/{domain}\222A]\032[Re"
  "trieve a list of NamedEntity objects sha"
  "ring a common resource type, project, an"
  "d domain.\022\312\001\n\016GetNamedEntity\022%.flyteidl."
  "admin.NamedEntityGetRequest\032\033.flyteidl.a"
  "dmin.NamedEntity\"t\202\323\344\223\002K\022I/api/v1/named_"
  "entities/{resource_type}/{id.project}/{i"
  "d.domain}/{id.name}\222A \032\036Retrieve a Named"
  "Entity object.\022\363\001\n\021UpdateNamedEntity\022(.f"
  "lyteidl.admin.NamedEntityUpdateRequest\032)"
  ".flyteidl.admin.NamedEntityUpdateRespons"
  "e\"\210\001\202\323\344\223\002N\032I/api/v1/named_entities/{reso"
  "urce_type}/{id.project}/{id.domain}/{id."
  "name}:\001*\222A1\032/Update the fields associate"
  "d with a NamedEntity\022\277\001\n\nGetVersion\022!.fl"
  "yteidl.admin.GetVersionRequest\032\".flyteid"
  "l.admin.GetVersionResponse\"j\202\323\344\223\002\021\022\017/api"
  "/v1/version\222AP\032NRetrieve the Version (in"
  "cluding the Build  information) for Flyt"
  "eAdmin serviceB9Z7github.com/flyteorg/fl"
  "yteidl/gen/pb-go/flyteidl/serviceb\006proto"
  "3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fadmin_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fadmin_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto,
  "flyteidl/service/admin.proto", &assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto, 15081,
};

void AddDescriptors_flyteidl_2fservice_2fadmin_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[16] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fworkflow_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fevent_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fnode_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fversion_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fcommon_2eproto,
    ::AddDescriptors_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fadmin_2eproto, deps, 16);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fadmin_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fadmin_2eproto(); return true; }();
namespace flyteidl {
namespace service {

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
