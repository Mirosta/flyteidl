// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/settings.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fadmin_2fsettings_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fadmin_2fsettings_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/admin/cluster_assignment.pb.h"
#include "flyteidl/core/execution.pb.h"
#include "flyteidl/admin/matchable_resource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fsettings_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fadmin_2fsettings_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fadmin_2fsettings_2eproto();
namespace flyteidl {
namespace admin {
class Settings;
class SettingsDefaultTypeInternal;
extern SettingsDefaultTypeInternal _Settings_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::admin::Settings* Arena::CreateMaybeMessage<::flyteidl::admin::Settings>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace admin {

// ===================================================================

class Settings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.Settings) */ {
 public:
  Settings();
  virtual ~Settings();

  Settings(const Settings& from);

  inline Settings& operator=(const Settings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Settings(Settings&& from) noexcept
    : Settings() {
    *this = ::std::move(from);
  }

  inline Settings& operator=(Settings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Settings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Settings* internal_default_instance() {
    return reinterpret_cast<const Settings*>(
               &_Settings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Settings* other);
  friend void swap(Settings& a, Settings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Settings* New() const final {
    return CreateMaybeMessage<Settings>(nullptr);
  }

  Settings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Settings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Settings& from);
  void MergeFrom(const Settings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Settings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.WorkflowExecutionConfig workflow_execution_settings = 1;
  bool has_workflow_execution_settings() const;
  void clear_workflow_execution_settings();
  static const int kWorkflowExecutionSettingsFieldNumber = 1;
  const ::flyteidl::admin::WorkflowExecutionConfig& workflow_execution_settings() const;
  ::flyteidl::admin::WorkflowExecutionConfig* release_workflow_execution_settings();
  ::flyteidl::admin::WorkflowExecutionConfig* mutable_workflow_execution_settings();
  void set_allocated_workflow_execution_settings(::flyteidl::admin::WorkflowExecutionConfig* workflow_execution_settings);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.Settings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::WorkflowExecutionConfig* workflow_execution_settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fsettings_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Settings

// .flyteidl.admin.WorkflowExecutionConfig workflow_execution_settings = 1;
inline bool Settings::has_workflow_execution_settings() const {
  return this != internal_default_instance() && workflow_execution_settings_ != nullptr;
}
inline const ::flyteidl::admin::WorkflowExecutionConfig& Settings::workflow_execution_settings() const {
  const ::flyteidl::admin::WorkflowExecutionConfig* p = workflow_execution_settings_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.Settings.workflow_execution_settings)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::WorkflowExecutionConfig*>(
      &::flyteidl::admin::_WorkflowExecutionConfig_default_instance_);
}
inline ::flyteidl::admin::WorkflowExecutionConfig* Settings::release_workflow_execution_settings() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.Settings.workflow_execution_settings)
  
  ::flyteidl::admin::WorkflowExecutionConfig* temp = workflow_execution_settings_;
  workflow_execution_settings_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::WorkflowExecutionConfig* Settings::mutable_workflow_execution_settings() {
  
  if (workflow_execution_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::WorkflowExecutionConfig>(GetArenaNoVirtual());
    workflow_execution_settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.Settings.workflow_execution_settings)
  return workflow_execution_settings_;
}
inline void Settings::set_allocated_workflow_execution_settings(::flyteidl::admin::WorkflowExecutionConfig* workflow_execution_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(workflow_execution_settings_);
  }
  if (workflow_execution_settings) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      workflow_execution_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, workflow_execution_settings, submessage_arena);
    }
    
  } else {
    
  }
  workflow_execution_settings_ = workflow_execution_settings;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.Settings.workflow_execution_settings)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fadmin_2fsettings_2eproto
