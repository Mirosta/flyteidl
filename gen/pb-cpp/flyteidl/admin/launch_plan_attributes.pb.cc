// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/launch_plan_attributes.proto

#include "flyteidl/admin/launch_plan_attributes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fmatchable_5fresource_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto;
namespace flyteidl {
namespace admin {
class LaunchPlanAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaunchPlanAttributes> _instance;
} _LaunchPlanAttributes_default_instance_;
class LaunchPlanAttributesUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaunchPlanAttributesUpdateRequest> _instance;
} _LaunchPlanAttributesUpdateRequest_default_instance_;
class LaunchPlanAttributesUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaunchPlanAttributesUpdateResponse> _instance;
} _LaunchPlanAttributesUpdateResponse_default_instance_;
class LaunchPlanAttributesGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaunchPlanAttributesGetRequest> _instance;
} _LaunchPlanAttributesGetRequest_default_instance_;
class LaunchPlanAttributesGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaunchPlanAttributesGetResponse> _instance;
} _LaunchPlanAttributesGetResponse_default_instance_;
class LaunchPlanAttributesDeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaunchPlanAttributesDeleteRequest> _instance;
} _LaunchPlanAttributesDeleteRequest_default_instance_;
class LaunchPlanAttributesDeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LaunchPlanAttributesDeleteResponse> _instance;
} _LaunchPlanAttributesDeleteResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static void InitDefaultsLaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_LaunchPlanAttributes_default_instance_;
    new (ptr) ::flyteidl::admin::LaunchPlanAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LaunchPlanAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto}, {
      &scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base,}};

static void InitDefaultsLaunchPlanAttributesUpdateRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_LaunchPlanAttributesUpdateRequest_default_instance_;
    new (ptr) ::flyteidl::admin::LaunchPlanAttributesUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LaunchPlanAttributesUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LaunchPlanAttributesUpdateRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLaunchPlanAttributesUpdateRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto}, {
      &scc_info_LaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base,}};

static void InitDefaultsLaunchPlanAttributesUpdateResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_LaunchPlanAttributesUpdateResponse_default_instance_;
    new (ptr) ::flyteidl::admin::LaunchPlanAttributesUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LaunchPlanAttributesUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LaunchPlanAttributesUpdateResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLaunchPlanAttributesUpdateResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto}, {}};

static void InitDefaultsLaunchPlanAttributesGetRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_LaunchPlanAttributesGetRequest_default_instance_;
    new (ptr) ::flyteidl::admin::LaunchPlanAttributesGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LaunchPlanAttributesGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LaunchPlanAttributesGetRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLaunchPlanAttributesGetRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto}, {}};

static void InitDefaultsLaunchPlanAttributesGetResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_LaunchPlanAttributesGetResponse_default_instance_;
    new (ptr) ::flyteidl::admin::LaunchPlanAttributesGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LaunchPlanAttributesGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LaunchPlanAttributesGetResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLaunchPlanAttributesGetResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto}, {
      &scc_info_LaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base,}};

static void InitDefaultsLaunchPlanAttributesDeleteRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_LaunchPlanAttributesDeleteRequest_default_instance_;
    new (ptr) ::flyteidl::admin::LaunchPlanAttributesDeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LaunchPlanAttributesDeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LaunchPlanAttributesDeleteRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLaunchPlanAttributesDeleteRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto}, {}};

static void InitDefaultsLaunchPlanAttributesDeleteResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_LaunchPlanAttributesDeleteResponse_default_instance_;
    new (ptr) ::flyteidl::admin::LaunchPlanAttributesDeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LaunchPlanAttributesDeleteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LaunchPlanAttributesDeleteResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLaunchPlanAttributesDeleteResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto}, {}};

void InitDefaults_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaunchPlanAttributesUpdateRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaunchPlanAttributesUpdateResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaunchPlanAttributesGetRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaunchPlanAttributesGetResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaunchPlanAttributesDeleteRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LaunchPlanAttributesDeleteResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributes, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributes, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributes, workflow_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributes, launch_plan_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributes, matching_attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesUpdateRequest, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetRequest, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetRequest, workflow_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetRequest, launch_plan_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetRequest, resource_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesGetResponse, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesDeleteRequest, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesDeleteRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesDeleteRequest, workflow_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesDeleteRequest, launch_plan_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesDeleteRequest, resource_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::LaunchPlanAttributesDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::admin::LaunchPlanAttributes)},
  { 10, -1, sizeof(::flyteidl::admin::LaunchPlanAttributesUpdateRequest)},
  { 16, -1, sizeof(::flyteidl::admin::LaunchPlanAttributesUpdateResponse)},
  { 21, -1, sizeof(::flyteidl::admin::LaunchPlanAttributesGetRequest)},
  { 31, -1, sizeof(::flyteidl::admin::LaunchPlanAttributesGetResponse)},
  { 37, -1, sizeof(::flyteidl::admin::LaunchPlanAttributesDeleteRequest)},
  { 47, -1, sizeof(::flyteidl::admin::LaunchPlanAttributesDeleteResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LaunchPlanAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LaunchPlanAttributesUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LaunchPlanAttributesUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LaunchPlanAttributesGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LaunchPlanAttributesGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LaunchPlanAttributesDeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LaunchPlanAttributesDeleteResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto = {
  {}, AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto, "flyteidl/admin/launch_plan_attributes.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto, 7, file_level_enum_descriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[] =
  "\n+flyteidl/admin/launch_plan_attributes."
  "proto\022\016flyteidl.admin\032\'flyteidl/admin/ma"
  "tchable_resource.proto\"\237\001\n\024LaunchPlanAtt"
  "ributes\022\017\n\007project\030\001 \001(\t\022\016\n\006domain\030\002 \001(\t"
  "\022\020\n\010workflow\030\003 \001(\t\022\023\n\013launch_plan\030\004 \001(\t\022"
  "\?\n\023matching_attributes\030\005 \001(\0132\".flyteidl."
  "admin.MatchingAttributes\"]\n!LaunchPlanAt"
  "tributesUpdateRequest\0228\n\nattributes\030\001 \001("
  "\0132$.flyteidl.admin.LaunchPlanAttributes\""
  "$\n\"LaunchPlanAttributesUpdateResponse\"\242\001"
  "\n\036LaunchPlanAttributesGetRequest\022\017\n\007proj"
  "ect\030\001 \001(\t\022\016\n\006domain\030\002 \001(\t\022\020\n\010workflow\030\003 "
  "\001(\t\022\023\n\013launch_plan\030\004 \001(\t\0228\n\rresource_typ"
  "e\030\005 \001(\0162!.flyteidl.admin.MatchableResour"
  "ce\"[\n\037LaunchPlanAttributesGetResponse\0228\n"
  "\nattributes\030\001 \001(\0132$.flyteidl.admin.Launc"
  "hPlanAttributes\"\245\001\n!LaunchPlanAttributes"
  "DeleteRequest\022\017\n\007project\030\001 \001(\t\022\016\n\006domain"
  "\030\002 \001(\t\022\020\n\010workflow\030\003 \001(\t\022\023\n\013launch_plan\030"
  "\004 \001(\t\0228\n\rresource_type\030\005 \001(\0162!.flyteidl."
  "admin.MatchableResource\"$\n\"LaunchPlanAtt"
  "ributesDeleteResponseB7Z5github.com/flyt"
  "eorg/flyteidl/gen/pb-go/flyteidl/adminb\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto = {
  false, InitDefaults_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto, 
  descriptor_table_protodef_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto,
  "flyteidl/admin/launch_plan_attributes.proto", &assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto, 926,
};

void AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto = []() { AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto(); return true; }();
namespace flyteidl {
namespace admin {

// ===================================================================

void LaunchPlanAttributes::InitAsDefaultInstance() {
  ::flyteidl::admin::_LaunchPlanAttributes_default_instance_._instance.get_mutable()->matching_attributes_ = const_cast< ::flyteidl::admin::MatchingAttributes*>(
      ::flyteidl::admin::MatchingAttributes::internal_default_instance());
}
class LaunchPlanAttributes::HasBitSetters {
 public:
  static const ::flyteidl::admin::MatchingAttributes& matching_attributes(const LaunchPlanAttributes* msg);
};

const ::flyteidl::admin::MatchingAttributes&
LaunchPlanAttributes::HasBitSetters::matching_attributes(const LaunchPlanAttributes* msg) {
  return *msg->matching_attributes_;
}
void LaunchPlanAttributes::clear_matching_attributes() {
  if (GetArenaNoVirtual() == nullptr && matching_attributes_ != nullptr) {
    delete matching_attributes_;
  }
  matching_attributes_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchPlanAttributes::kProjectFieldNumber;
const int LaunchPlanAttributes::kDomainFieldNumber;
const int LaunchPlanAttributes::kWorkflowFieldNumber;
const int LaunchPlanAttributes::kLaunchPlanFieldNumber;
const int LaunchPlanAttributes::kMatchingAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchPlanAttributes::LaunchPlanAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LaunchPlanAttributes)
}
LaunchPlanAttributes::LaunchPlanAttributes(const LaunchPlanAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  workflow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.workflow().size() > 0) {
    workflow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workflow_);
  }
  launch_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.launch_plan().size() > 0) {
    launch_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.launch_plan_);
  }
  if (from.has_matching_attributes()) {
    matching_attributes_ = new ::flyteidl::admin::MatchingAttributes(*from.matching_attributes_);
  } else {
    matching_attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LaunchPlanAttributes)
}

void LaunchPlanAttributes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  matching_attributes_ = nullptr;
}

LaunchPlanAttributes::~LaunchPlanAttributes() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LaunchPlanAttributes)
  SharedDtor();
}

void LaunchPlanAttributes::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete matching_attributes_;
}

void LaunchPlanAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchPlanAttributes& LaunchPlanAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaunchPlanAttributes_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void LaunchPlanAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LaunchPlanAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && matching_attributes_ != nullptr) {
    delete matching_attributes_;
  }
  matching_attributes_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaunchPlanAttributes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaunchPlanAttributes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributes.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string domain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributes.domain");
        object = msg->mutable_domain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string workflow = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributes.workflow");
        object = msg->mutable_workflow();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string launch_plan = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributes.launch_plan");
        object = msg->mutable_launch_plan();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.admin.MatchingAttributes matching_attributes = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::MatchingAttributes::_InternalParse;
        object = msg->mutable_matching_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaunchPlanAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LaunchPlanAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributes.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributes.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string workflow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workflow()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->workflow().data(), static_cast<int>(this->workflow().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributes.workflow"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string launch_plan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_launch_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributes.launch_plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.MatchingAttributes matching_attributes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matching_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LaunchPlanAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LaunchPlanAttributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaunchPlanAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LaunchPlanAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workflow().data(), static_cast<int>(this->workflow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.workflow");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->workflow(), output);
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.launch_plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->launch_plan(), output);
  }

  // .flyteidl.admin.MatchingAttributes matching_attributes = 5;
  if (this->has_matching_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::matching_attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LaunchPlanAttributes)
}

::google::protobuf::uint8* LaunchPlanAttributes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LaunchPlanAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workflow().data(), static_cast<int>(this->workflow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.workflow");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->workflow(), target);
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributes.launch_plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->launch_plan(), target);
  }

  // .flyteidl.admin.MatchingAttributes matching_attributes = 5;
  if (this->has_matching_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::matching_attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LaunchPlanAttributes)
  return target;
}

size_t LaunchPlanAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LaunchPlanAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->workflow());
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->launch_plan());
  }

  // .flyteidl.admin.MatchingAttributes matching_attributes = 5;
  if (this->has_matching_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *matching_attributes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchPlanAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LaunchPlanAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchPlanAttributes* source =
      ::google::protobuf::DynamicCastToGenerated<LaunchPlanAttributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LaunchPlanAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LaunchPlanAttributes)
    MergeFrom(*source);
  }
}

void LaunchPlanAttributes::MergeFrom(const LaunchPlanAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LaunchPlanAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.workflow().size() > 0) {

    workflow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workflow_);
  }
  if (from.launch_plan().size() > 0) {

    launch_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.launch_plan_);
  }
  if (from.has_matching_attributes()) {
    mutable_matching_attributes()->::flyteidl::admin::MatchingAttributes::MergeFrom(from.matching_attributes());
  }
}

void LaunchPlanAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LaunchPlanAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchPlanAttributes::CopyFrom(const LaunchPlanAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LaunchPlanAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchPlanAttributes::IsInitialized() const {
  return true;
}

void LaunchPlanAttributes::Swap(LaunchPlanAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchPlanAttributes::InternalSwap(LaunchPlanAttributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  workflow_.Swap(&other->workflow_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  launch_plan_.Swap(&other->launch_plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(matching_attributes_, other->matching_attributes_);
}

::google::protobuf::Metadata LaunchPlanAttributes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaunchPlanAttributesUpdateRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_LaunchPlanAttributesUpdateRequest_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::flyteidl::admin::LaunchPlanAttributes*>(
      ::flyteidl::admin::LaunchPlanAttributes::internal_default_instance());
}
class LaunchPlanAttributesUpdateRequest::HasBitSetters {
 public:
  static const ::flyteidl::admin::LaunchPlanAttributes& attributes(const LaunchPlanAttributesUpdateRequest* msg);
};

const ::flyteidl::admin::LaunchPlanAttributes&
LaunchPlanAttributesUpdateRequest::HasBitSetters::attributes(const LaunchPlanAttributesUpdateRequest* msg) {
  return *msg->attributes_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchPlanAttributesUpdateRequest::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchPlanAttributesUpdateRequest::LaunchPlanAttributesUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
}
LaunchPlanAttributesUpdateRequest::LaunchPlanAttributesUpdateRequest(const LaunchPlanAttributesUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attributes()) {
    attributes_ = new ::flyteidl::admin::LaunchPlanAttributes(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
}

void LaunchPlanAttributesUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaunchPlanAttributesUpdateRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  attributes_ = nullptr;
}

LaunchPlanAttributesUpdateRequest::~LaunchPlanAttributesUpdateRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  SharedDtor();
}

void LaunchPlanAttributesUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete attributes_;
}

void LaunchPlanAttributesUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchPlanAttributesUpdateRequest& LaunchPlanAttributesUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaunchPlanAttributesUpdateRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void LaunchPlanAttributesUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaunchPlanAttributesUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaunchPlanAttributesUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::LaunchPlanAttributes::_InternalParse;
        object = msg->mutable_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaunchPlanAttributesUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaunchPlanAttributesUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
  if (this->has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
}

::google::protobuf::uint8* LaunchPlanAttributesUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
  if (this->has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  return target;
}

size_t LaunchPlanAttributesUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
  if (this->has_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attributes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchPlanAttributesUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchPlanAttributesUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LaunchPlanAttributesUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
    MergeFrom(*source);
  }
}

void LaunchPlanAttributesUpdateRequest::MergeFrom(const LaunchPlanAttributesUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_attributes()) {
    mutable_attributes()->::flyteidl::admin::LaunchPlanAttributes::MergeFrom(from.attributes());
  }
}

void LaunchPlanAttributesUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchPlanAttributesUpdateRequest::CopyFrom(const LaunchPlanAttributesUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LaunchPlanAttributesUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchPlanAttributesUpdateRequest::IsInitialized() const {
  return true;
}

void LaunchPlanAttributesUpdateRequest::Swap(LaunchPlanAttributesUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchPlanAttributesUpdateRequest::InternalSwap(LaunchPlanAttributesUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(attributes_, other->attributes_);
}

::google::protobuf::Metadata LaunchPlanAttributesUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaunchPlanAttributesUpdateResponse::InitAsDefaultInstance() {
}
class LaunchPlanAttributesUpdateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchPlanAttributesUpdateResponse::LaunchPlanAttributesUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
}
LaunchPlanAttributesUpdateResponse::LaunchPlanAttributesUpdateResponse(const LaunchPlanAttributesUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
}

void LaunchPlanAttributesUpdateResponse::SharedCtor() {
}

LaunchPlanAttributesUpdateResponse::~LaunchPlanAttributesUpdateResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  SharedDtor();
}

void LaunchPlanAttributesUpdateResponse::SharedDtor() {
}

void LaunchPlanAttributesUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchPlanAttributesUpdateResponse& LaunchPlanAttributesUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaunchPlanAttributesUpdateResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void LaunchPlanAttributesUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaunchPlanAttributesUpdateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaunchPlanAttributesUpdateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaunchPlanAttributesUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaunchPlanAttributesUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
}

::google::protobuf::uint8* LaunchPlanAttributesUpdateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  return target;
}

size_t LaunchPlanAttributesUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchPlanAttributesUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchPlanAttributesUpdateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LaunchPlanAttributesUpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
    MergeFrom(*source);
  }
}

void LaunchPlanAttributesUpdateResponse::MergeFrom(const LaunchPlanAttributesUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LaunchPlanAttributesUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchPlanAttributesUpdateResponse::CopyFrom(const LaunchPlanAttributesUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LaunchPlanAttributesUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchPlanAttributesUpdateResponse::IsInitialized() const {
  return true;
}

void LaunchPlanAttributesUpdateResponse::Swap(LaunchPlanAttributesUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchPlanAttributesUpdateResponse::InternalSwap(LaunchPlanAttributesUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LaunchPlanAttributesUpdateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaunchPlanAttributesGetRequest::InitAsDefaultInstance() {
}
class LaunchPlanAttributesGetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchPlanAttributesGetRequest::kProjectFieldNumber;
const int LaunchPlanAttributesGetRequest::kDomainFieldNumber;
const int LaunchPlanAttributesGetRequest::kWorkflowFieldNumber;
const int LaunchPlanAttributesGetRequest::kLaunchPlanFieldNumber;
const int LaunchPlanAttributesGetRequest::kResourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchPlanAttributesGetRequest::LaunchPlanAttributesGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LaunchPlanAttributesGetRequest)
}
LaunchPlanAttributesGetRequest::LaunchPlanAttributesGetRequest(const LaunchPlanAttributesGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  workflow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.workflow().size() > 0) {
    workflow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workflow_);
  }
  launch_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.launch_plan().size() > 0) {
    launch_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.launch_plan_);
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LaunchPlanAttributesGetRequest)
}

void LaunchPlanAttributesGetRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaunchPlanAttributesGetRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_ = 0;
}

LaunchPlanAttributesGetRequest::~LaunchPlanAttributesGetRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LaunchPlanAttributesGetRequest)
  SharedDtor();
}

void LaunchPlanAttributesGetRequest::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LaunchPlanAttributesGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchPlanAttributesGetRequest& LaunchPlanAttributesGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaunchPlanAttributesGetRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void LaunchPlanAttributesGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaunchPlanAttributesGetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaunchPlanAttributesGetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesGetRequest.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string domain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesGetRequest.domain");
        object = msg->mutable_domain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string workflow = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesGetRequest.workflow");
        object = msg->mutable_workflow();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string launch_plan = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesGetRequest.launch_plan");
        object = msg->mutable_launch_plan();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.admin.MatchableResource resource_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_resource_type(static_cast<::flyteidl::admin::MatchableResource>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaunchPlanAttributesGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesGetRequest.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesGetRequest.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string workflow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workflow()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->workflow().data(), static_cast<int>(this->workflow().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesGetRequest.workflow"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string launch_plan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_launch_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesGetRequest.launch_plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.MatchableResource resource_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resource_type(static_cast< ::flyteidl::admin::MatchableResource >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LaunchPlanAttributesGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LaunchPlanAttributesGetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaunchPlanAttributesGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workflow().data(), static_cast<int>(this->workflow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.workflow");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->workflow(), output);
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.launch_plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->launch_plan(), output);
  }

  // .flyteidl.admin.MatchableResource resource_type = 5;
  if (this->resource_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->resource_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LaunchPlanAttributesGetRequest)
}

::google::protobuf::uint8* LaunchPlanAttributesGetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workflow().data(), static_cast<int>(this->workflow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.workflow");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->workflow(), target);
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesGetRequest.launch_plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->launch_plan(), target);
  }

  // .flyteidl.admin.MatchableResource resource_type = 5;
  if (this->resource_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->resource_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LaunchPlanAttributesGetRequest)
  return target;
}

size_t LaunchPlanAttributesGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->workflow());
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->launch_plan());
  }

  // .flyteidl.admin.MatchableResource resource_type = 5;
  if (this->resource_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchPlanAttributesGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchPlanAttributesGetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LaunchPlanAttributesGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LaunchPlanAttributesGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LaunchPlanAttributesGetRequest)
    MergeFrom(*source);
  }
}

void LaunchPlanAttributesGetRequest::MergeFrom(const LaunchPlanAttributesGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.workflow().size() > 0) {

    workflow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workflow_);
  }
  if (from.launch_plan().size() > 0) {

    launch_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.launch_plan_);
  }
  if (from.resource_type() != 0) {
    set_resource_type(from.resource_type());
  }
}

void LaunchPlanAttributesGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchPlanAttributesGetRequest::CopyFrom(const LaunchPlanAttributesGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LaunchPlanAttributesGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchPlanAttributesGetRequest::IsInitialized() const {
  return true;
}

void LaunchPlanAttributesGetRequest::Swap(LaunchPlanAttributesGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchPlanAttributesGetRequest::InternalSwap(LaunchPlanAttributesGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  workflow_.Swap(&other->workflow_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  launch_plan_.Swap(&other->launch_plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_type_, other->resource_type_);
}

::google::protobuf::Metadata LaunchPlanAttributesGetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaunchPlanAttributesGetResponse::InitAsDefaultInstance() {
  ::flyteidl::admin::_LaunchPlanAttributesGetResponse_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::flyteidl::admin::LaunchPlanAttributes*>(
      ::flyteidl::admin::LaunchPlanAttributes::internal_default_instance());
}
class LaunchPlanAttributesGetResponse::HasBitSetters {
 public:
  static const ::flyteidl::admin::LaunchPlanAttributes& attributes(const LaunchPlanAttributesGetResponse* msg);
};

const ::flyteidl::admin::LaunchPlanAttributes&
LaunchPlanAttributesGetResponse::HasBitSetters::attributes(const LaunchPlanAttributesGetResponse* msg) {
  return *msg->attributes_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchPlanAttributesGetResponse::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchPlanAttributesGetResponse::LaunchPlanAttributesGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LaunchPlanAttributesGetResponse)
}
LaunchPlanAttributesGetResponse::LaunchPlanAttributesGetResponse(const LaunchPlanAttributesGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attributes()) {
    attributes_ = new ::flyteidl::admin::LaunchPlanAttributes(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LaunchPlanAttributesGetResponse)
}

void LaunchPlanAttributesGetResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaunchPlanAttributesGetResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  attributes_ = nullptr;
}

LaunchPlanAttributesGetResponse::~LaunchPlanAttributesGetResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LaunchPlanAttributesGetResponse)
  SharedDtor();
}

void LaunchPlanAttributesGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete attributes_;
}

void LaunchPlanAttributesGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchPlanAttributesGetResponse& LaunchPlanAttributesGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaunchPlanAttributesGetResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void LaunchPlanAttributesGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaunchPlanAttributesGetResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaunchPlanAttributesGetResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::LaunchPlanAttributes::_InternalParse;
        object = msg->mutable_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaunchPlanAttributesGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LaunchPlanAttributesGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LaunchPlanAttributesGetResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaunchPlanAttributesGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
  if (this->has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LaunchPlanAttributesGetResponse)
}

::google::protobuf::uint8* LaunchPlanAttributesGetResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
  if (this->has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LaunchPlanAttributesGetResponse)
  return target;
}

size_t LaunchPlanAttributesGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.admin.LaunchPlanAttributes attributes = 1;
  if (this->has_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attributes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchPlanAttributesGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchPlanAttributesGetResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LaunchPlanAttributesGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LaunchPlanAttributesGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LaunchPlanAttributesGetResponse)
    MergeFrom(*source);
  }
}

void LaunchPlanAttributesGetResponse::MergeFrom(const LaunchPlanAttributesGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_attributes()) {
    mutable_attributes()->::flyteidl::admin::LaunchPlanAttributes::MergeFrom(from.attributes());
  }
}

void LaunchPlanAttributesGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchPlanAttributesGetResponse::CopyFrom(const LaunchPlanAttributesGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LaunchPlanAttributesGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchPlanAttributesGetResponse::IsInitialized() const {
  return true;
}

void LaunchPlanAttributesGetResponse::Swap(LaunchPlanAttributesGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchPlanAttributesGetResponse::InternalSwap(LaunchPlanAttributesGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(attributes_, other->attributes_);
}

::google::protobuf::Metadata LaunchPlanAttributesGetResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaunchPlanAttributesDeleteRequest::InitAsDefaultInstance() {
}
class LaunchPlanAttributesDeleteRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchPlanAttributesDeleteRequest::kProjectFieldNumber;
const int LaunchPlanAttributesDeleteRequest::kDomainFieldNumber;
const int LaunchPlanAttributesDeleteRequest::kWorkflowFieldNumber;
const int LaunchPlanAttributesDeleteRequest::kLaunchPlanFieldNumber;
const int LaunchPlanAttributesDeleteRequest::kResourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchPlanAttributesDeleteRequest::LaunchPlanAttributesDeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
}
LaunchPlanAttributesDeleteRequest::LaunchPlanAttributesDeleteRequest(const LaunchPlanAttributesDeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  workflow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.workflow().size() > 0) {
    workflow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workflow_);
  }
  launch_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.launch_plan().size() > 0) {
    launch_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.launch_plan_);
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
}

void LaunchPlanAttributesDeleteRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LaunchPlanAttributesDeleteRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_ = 0;
}

LaunchPlanAttributesDeleteRequest::~LaunchPlanAttributesDeleteRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  SharedDtor();
}

void LaunchPlanAttributesDeleteRequest::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LaunchPlanAttributesDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchPlanAttributesDeleteRequest& LaunchPlanAttributesDeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaunchPlanAttributesDeleteRequest_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void LaunchPlanAttributesDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  launch_plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaunchPlanAttributesDeleteRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaunchPlanAttributesDeleteRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesDeleteRequest.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string domain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesDeleteRequest.domain");
        object = msg->mutable_domain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string workflow = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesDeleteRequest.workflow");
        object = msg->mutable_workflow();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string launch_plan = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.LaunchPlanAttributesDeleteRequest.launch_plan");
        object = msg->mutable_launch_plan();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.admin.MatchableResource resource_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_resource_type(static_cast<::flyteidl::admin::MatchableResource>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaunchPlanAttributesDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesDeleteRequest.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesDeleteRequest.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string workflow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workflow()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->workflow().data(), static_cast<int>(this->workflow().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesDeleteRequest.workflow"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string launch_plan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_launch_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LaunchPlanAttributesDeleteRequest.launch_plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.MatchableResource resource_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resource_type(static_cast< ::flyteidl::admin::MatchableResource >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaunchPlanAttributesDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workflow().data(), static_cast<int>(this->workflow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.workflow");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->workflow(), output);
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.launch_plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->launch_plan(), output);
  }

  // .flyteidl.admin.MatchableResource resource_type = 5;
  if (this->resource_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->resource_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
}

::google::protobuf::uint8* LaunchPlanAttributesDeleteRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workflow().data(), static_cast<int>(this->workflow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.workflow");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->workflow(), target);
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->launch_plan().data(), static_cast<int>(this->launch_plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LaunchPlanAttributesDeleteRequest.launch_plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->launch_plan(), target);
  }

  // .flyteidl.admin.MatchableResource resource_type = 5;
  if (this->resource_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->resource_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  return target;
}

size_t LaunchPlanAttributesDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string workflow = 3;
  if (this->workflow().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->workflow());
  }

  // string launch_plan = 4;
  if (this->launch_plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->launch_plan());
  }

  // .flyteidl.admin.MatchableResource resource_type = 5;
  if (this->resource_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchPlanAttributesDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchPlanAttributesDeleteRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LaunchPlanAttributesDeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
    MergeFrom(*source);
  }
}

void LaunchPlanAttributesDeleteRequest::MergeFrom(const LaunchPlanAttributesDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.workflow().size() > 0) {

    workflow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workflow_);
  }
  if (from.launch_plan().size() > 0) {

    launch_plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.launch_plan_);
  }
  if (from.resource_type() != 0) {
    set_resource_type(from.resource_type());
  }
}

void LaunchPlanAttributesDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchPlanAttributesDeleteRequest::CopyFrom(const LaunchPlanAttributesDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LaunchPlanAttributesDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchPlanAttributesDeleteRequest::IsInitialized() const {
  return true;
}

void LaunchPlanAttributesDeleteRequest::Swap(LaunchPlanAttributesDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchPlanAttributesDeleteRequest::InternalSwap(LaunchPlanAttributesDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  workflow_.Swap(&other->workflow_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  launch_plan_.Swap(&other->launch_plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_type_, other->resource_type_);
}

::google::protobuf::Metadata LaunchPlanAttributesDeleteRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LaunchPlanAttributesDeleteResponse::InitAsDefaultInstance() {
}
class LaunchPlanAttributesDeleteResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchPlanAttributesDeleteResponse::LaunchPlanAttributesDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
}
LaunchPlanAttributesDeleteResponse::LaunchPlanAttributesDeleteResponse(const LaunchPlanAttributesDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
}

void LaunchPlanAttributesDeleteResponse::SharedCtor() {
}

LaunchPlanAttributesDeleteResponse::~LaunchPlanAttributesDeleteResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  SharedDtor();
}

void LaunchPlanAttributesDeleteResponse::SharedDtor() {
}

void LaunchPlanAttributesDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LaunchPlanAttributesDeleteResponse& LaunchPlanAttributesDeleteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LaunchPlanAttributesDeleteResponse_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void LaunchPlanAttributesDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LaunchPlanAttributesDeleteResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LaunchPlanAttributesDeleteResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LaunchPlanAttributesDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LaunchPlanAttributesDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
}

::google::protobuf::uint8* LaunchPlanAttributesDeleteResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  return target;
}

size_t LaunchPlanAttributesDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LaunchPlanAttributesDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchPlanAttributesDeleteResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LaunchPlanAttributesDeleteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
    MergeFrom(*source);
  }
}

void LaunchPlanAttributesDeleteResponse::MergeFrom(const LaunchPlanAttributesDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LaunchPlanAttributesDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchPlanAttributesDeleteResponse::CopyFrom(const LaunchPlanAttributesDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LaunchPlanAttributesDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchPlanAttributesDeleteResponse::IsInitialized() const {
  return true;
}

void LaunchPlanAttributesDeleteResponse::Swap(LaunchPlanAttributesDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchPlanAttributesDeleteResponse::InternalSwap(LaunchPlanAttributesDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LaunchPlanAttributesDeleteResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2flaunch_5fplan_5fattributes_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::admin::LaunchPlanAttributes* Arena::CreateMaybeMessage< ::flyteidl::admin::LaunchPlanAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::LaunchPlanAttributes >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::LaunchPlanAttributesUpdateRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::LaunchPlanAttributesUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::LaunchPlanAttributesUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::LaunchPlanAttributesUpdateResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::LaunchPlanAttributesUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::LaunchPlanAttributesUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::LaunchPlanAttributesGetRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::LaunchPlanAttributesGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::LaunchPlanAttributesGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::LaunchPlanAttributesGetResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::LaunchPlanAttributesGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::LaunchPlanAttributesGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::LaunchPlanAttributesDeleteRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::LaunchPlanAttributesDeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::LaunchPlanAttributesDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::LaunchPlanAttributesDeleteResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::LaunchPlanAttributesDeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::LaunchPlanAttributesDeleteResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
