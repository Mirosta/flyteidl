# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/core/common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='flyteidl/core/common.proto',
  package='flyteidl.core',
  syntax='proto3',
  serialized_options=_b('Z0github.com/lyft/flyteidl/gen/pb-go/flyteidl/core'),
  serialized_pb=_b('\n\x1a\x66lyteidl/core/common.proto\x12\rflyteidl.core\"\x15\n\x06Secret\x12\x0b\n\x03key\x18\x01 \x01(\tB2Z0github.com/lyft/flyteidl/gen/pb-go/flyteidl/coreb\x06proto3')
)




_SECRET = _descriptor.Descriptor(
  name='Secret',
  full_name='flyteidl.core.Secret',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='flyteidl.core.Secret.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=45,
  serialized_end=66,
)

DESCRIPTOR.message_types_by_name['Secret'] = _SECRET
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Secret = _reflection.GeneratedProtocolMessageType('Secret', (_message.Message,), dict(
  DESCRIPTOR = _SECRET,
  __module__ = 'flyteidl.core.common_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Secret)
  ))
_sym_db.RegisterMessage(Secret)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
