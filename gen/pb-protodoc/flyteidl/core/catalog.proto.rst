.. _api_file_flyteidl/core/catalog.proto:

catalog.proto
===========================

.. _api_msg_flyteidl.core.CatalogArtifactTag:

flyteidl.core.CatalogArtifactTag
--------------------------------

`[flyteidl.core.CatalogArtifactTag proto] <https://github.com/lyft/flyteidl/blob/master/protos/flyteidl/core/catalog.proto#L24>`_


.. code-block:: json

  {
    "artifact_id": "...",
    "name": "..."
  }

.. _api_field_flyteidl.core.CatalogArtifactTag.artifact_id:

artifact_id
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Artifact ID is generated name
  
  
.. _api_field_flyteidl.core.CatalogArtifactTag.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Flyte computes the tag automatically, as the hash of the values
  
  


.. _api_msg_flyteidl.core.CatalogMetadata:

flyteidl.core.CatalogMetadata
-----------------------------

`[flyteidl.core.CatalogMetadata proto] <https://github.com/lyft/flyteidl/blob/master/protos/flyteidl/core/catalog.proto#L32>`_

Catalog artifact information with specific metadata

.. code-block:: json

  {
    "dataset_id": "{...}",
    "artifact_tag": "{...}",
    "source_task_execution": "{...}"
  }

.. _api_field_flyteidl.core.CatalogMetadata.dataset_id:

dataset_id
  (:ref:`flyteidl.core.Identifier <api_msg_flyteidl.core.Identifier>`) Dataset ID in the catalog
  
  
.. _api_field_flyteidl.core.CatalogMetadata.artifact_tag:

artifact_tag
  (:ref:`flyteidl.core.CatalogArtifactTag <api_msg_flyteidl.core.CatalogArtifactTag>`) Artifact tag in the catalog
  
  
.. _api_field_flyteidl.core.CatalogMetadata.source_task_execution:

source_task_execution
  (:ref:`flyteidl.core.TaskExecutionIdentifier <api_msg_flyteidl.core.TaskExecutionIdentifier>`) Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
  
  Optional: Source Execution identifier, if this dataset was generated by another execution in Flyte. This is a one-of field and will depend on the caching context
  
  

.. _api_enum_flyteidl.core.CatalogCacheStatus:

Enum flyteidl.core.CatalogCacheStatus
-------------------------------------

`[flyteidl.core.CatalogCacheStatus proto] <https://github.com/lyft/flyteidl/blob/master/protos/flyteidl/core/catalog.proto#L9>`_

Indicates the status of CatalogCaching. The reason why this is not embeded in TaskNodeMetadata is, that we may use for other types of nodes as well in the future

.. _api_enum_value_flyteidl.core.CatalogCacheStatus.CACHE_DISABLED:

CACHE_DISABLED
  *(DEFAULT)* ⁣Used to indicate that caching was disabled
  
  
.. _api_enum_value_flyteidl.core.CatalogCacheStatus.CACHE_MISS:

CACHE_MISS
  ⁣Used to indicate that the cache lookup resulted in no matches
  
  
.. _api_enum_value_flyteidl.core.CatalogCacheStatus.CACHE_HIT:

CACHE_HIT
  ⁣used to indicate that the associated artifact was a result of a previous execution
  
  
.. _api_enum_value_flyteidl.core.CatalogCacheStatus.CACHE_POPULATED:

CACHE_POPULATED
  ⁣used to indicate that the resultant artifact was added to the cache
  
  
.. _api_enum_value_flyteidl.core.CatalogCacheStatus.CACHE_LOOKUP_FAILURE:

CACHE_LOOKUP_FAILURE
  ⁣Used to indicate that cache lookup failed because of an error
  
  
.. _api_enum_value_flyteidl.core.CatalogCacheStatus.CACHE_PUT_FAILURE:

CACHE_PUT_FAILURE
  ⁣Used to indicate that cache lookup failed because of an error
  
  
