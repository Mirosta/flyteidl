.. _api_file_k8s.io/apimachinery/pkg/util/intstr/generated.proto:

generated.proto
===================================================


opyright The Kubernetes Authors.

icensed under the Apache License, Version 2.0 (the "License");
ou may not use this file except in compliance with the License.
ou may obtain a copy of the License at

ttp://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
istributed under the License is distributed on an "AS IS" BASIS,
ITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ee the License for the specific language governing permissions and
imitations under the License.
This file was autogenerated by go-to-protobuf. Do not edit it manually!

.. _api_msg_k8s.io.apimachinery.pkg.util.intstr.IntOrString:

k8s.io.apimachinery.pkg.util.intstr.IntOrString
-----------------------------------------------

`[k8s.io.apimachinery.pkg.util.intstr.IntOrString proto] <https://github.com/lyft/flyteidl/blob/master/protos/k8s.io/apimachinery/pkg/util/intstr/generated.proto#L35>`_

IntOrString is a type that can hold an int32 or a string.  When used in
JSON or YAML marshalling and unmarshalling, it produces or consumes the
inner type.  This allows you to have, for example, a JSON field that can
accept a name or number.
TODO: Rename to Int32OrString

+protobuf=true
+protobuf.options.(gogoproto.goproto_stringer)=false
+k8s:openapi-gen=true

.. code-block:: json

  {
    "type": "...",
    "intVal": "...",
    "strVal": "..."
  }

.. _api_field_k8s.io.apimachinery.pkg.util.intstr.IntOrString.type:

type
  (`int64 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) 
  
.. _api_field_k8s.io.apimachinery.pkg.util.intstr.IntOrString.intVal:

intVal
  (`int32 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) 
  
.. _api_field_k8s.io.apimachinery.pkg.util.intstr.IntOrString.strVal:

strVal
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) 
  

