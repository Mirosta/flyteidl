// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/event_sensor.proto

package flyteidl.service;

public final class EventSensor {
  private EventSensor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#flyteidl/service/event_sensor.proto\022\020f" +
      "lyteidl.service\032\034google/api/annotations." +
      "proto\032\033flyteidl/event/sensor.proto\032!flyt" +
      "eidl/event/sensor_state.proto\032,protoc-ge" +
      "n-swagger/options/annotations.proto2\265\006\n\022" +
      "EventSensorService\022\261\001\n\020ListEventTargets\022" +
      "&.flyteidl.event.EventTargetListRequest\032" +
      "\037.flyteidl.event.EventTargetList\"T\202\323\344\223\002\036" +
      "\022\034/api/v1/targets/{event_type}\222A-\032+Retri" +
      "eve existing event target definitions.\022\265" +
      "\001\n\rEventOccurred\022$.flyteidl.event.EventO" +
      "ccurredRequest\032%.flyteidl.event.EventOcc" +
      "urredResponse\"W\202\323\344\223\002\022\022\020/api/v1/occurred\222" +
      "A<\032:Notifies a downstream consumer that " +
      "an event has occurred.\022\324\001\n\023GetEventSenso" +
      "rState\022*.flyteidl.event.EventSensorState" +
      "GetRequest\032+.flyteidl.event.EventSensorS" +
      "tateGetResponse\"d\202\323\344\223\002#\022!/api/v1/sensor_" +
      "state/{event_type}\222A8\0326Retrieve saved st" +
      "ate for a specific event sensor type.\022\333\001" +
      "\n\026UpdateEventSensorState\022-.flyteidl.even" +
      "t.EventSensorStateUpdateRequest\032..flytei" +
      "dl.event.EventSensorStateUpdateResponse\"" +
      "b\202\323\344\223\002#\032!/api/v1/sensor_state/{event_typ" +
      "e}\222A6\0324Update saved state for a specific" +
      " event sensor type.B9Z7github.com/flyteo" +
      "rg/flyteidl/gen/pb-go/flyteidl/serviceb\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          flyteidl.event.Sensor.getDescriptor(),
          flyteidl.event.SensorState.getDescriptor(),
          grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor(),
        }, assigner);
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(grpc.gateway.protoc_gen_swagger.options.Annotations.openapiv2Operation);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    flyteidl.event.Sensor.getDescriptor();
    flyteidl.event.SensorState.getDescriptor();
    grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
